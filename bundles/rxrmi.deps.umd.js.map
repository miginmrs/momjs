{"version":3,"sources":["webpack://rxrmi/webpack/universalModuleDefinition","webpack://rxrmi/webpack/bootstrap","webpack://rxrmi/./node_modules/altern-map/source/altern-map.ts","webpack://rxrmi/./node_modules/altern-map/source/index.ts","webpack://rxrmi/./node_modules/deep-is/index.js","webpack://rxrmi/./node_modules/dependent-type/source/index.ts","webpack://rxrmi/./node_modules/dependent-type/source/map.ts","webpack://rxrmi/./node_modules/rx-async/source/async-map.ts","webpack://rxrmi/./node_modules/rx-async/source/index.ts","webpack://rxrmi/./node_modules/rx-async/source/linked-list.ts","webpack://rxrmi/./source/destructable.ts","webpack://rxrmi/./source/handlers.ts","webpack://rxrmi/./source/index.ts","webpack://rxrmi/./source/proxy.ts","webpack://rxrmi/./source/store.ts","webpack://rxrmi/./utils/global.ts","webpack://rxrmi/./utils/guards.ts","webpack://rxrmi/./utils/index.ts","webpack://rxrmi/./utils/quick-promise.ts","webpack://rxrmi/./utils/rx-utils.ts","webpack://rxrmi/external {\"root\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"commonjs2\":\"rxjs\",\"amd\":\"rxjs\"}","webpack://rxrmi/external {\"root\":[\"rxjs\",\"internal\",\"InnerSubscriber\"],\"commonjs\":\"rxjs/internal/InnerSubscriber\",\"commonjs2\":\"rxjs/internal/InnerSubscriber\",\"amd\":\"rxjs/internal/InnerSubscriber\"}","webpack://rxrmi/external {\"root\":[\"rxjs\",\"internal\",\"OuterSubscriber\"],\"commonjs\":\"rxjs/internal/OuterSubscriber\",\"commonjs2\":\"rxjs/internal/OuterSubscriber\",\"amd\":\"rxjs/internal/OuterSubscriber\"}","webpack://rxrmi/external {\"root\":[\"rxjs\",\"internal\",\"observable\",\"combineLatest\"],\"commonjs\":\"rxjs/internal/observable/combineLatest\",\"commonjs2\":\"rxjs/internal/observable/combineLatest\",\"amd\":\"rxjs/internal/observable/combineLatest\"}","webpack://rxrmi/external {\"root\":[\"rxjs\",\"internal\",\"util\",\"subscribeToResult\"],\"commonjs\":\"rxjs/internal/util/subscribeToResult\",\"commonjs2\":\"rxjs/internal/util/subscribeToResult\",\"amd\":\"rxjs/internal/util/subscribeToResult\"}","webpack://rxrmi/external {\"root\":[\"rxjs\",\"operators\"],\"commonjs\":\"rxjs/operators\",\"commonjs2\":\"rxjs/operators\",\"amd\":\"rxjs/operators\"}"],"names":[],"mappings":"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","file":"rxrmi.deps.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rxjs\"), require(\"rxjs/internal/InnerSubscriber\"), require(\"rxjs/internal/OuterSubscriber\"), require(\"rxjs/internal/observable/combineLatest\"), require(\"rxjs/internal/util/subscribeToResult\"), require(\"rxjs/operators\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"rxjs\", \"rxjs/internal/InnerSubscriber\", \"rxjs/internal/OuterSubscriber\", \"rxjs/internal/observable/combineLatest\", \"rxjs/internal/util/subscribeToResult\", \"rxjs/operators\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rxrmi\"] = factory(require(\"rxjs\"), require(\"rxjs/internal/InnerSubscriber\"), require(\"rxjs/internal/OuterSubscriber\"), require(\"rxjs/internal/observable/combineLatest\"), require(\"rxjs/internal/util/subscribeToResult\"), require(\"rxjs/operators\"));\n\telse\n\t\troot[\"rxrmi\"] = factory(root[\"rxjs\"], root[\"rxjs\"][\"internal\"][\"InnerSubscriber\"], root[\"rxjs\"][\"internal\"][\"OuterSubscriber\"], root[\"rxjs\"][\"internal\"][\"observable\"][\"combineLatest\"], root[\"rxjs\"][\"internal\"][\"util\"][\"subscribeToResult\"], root[\"rxjs\"][\"operators\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE_rxjs__, __WEBPACK_EXTERNAL_MODULE_rxjs_internal_InnerSubscriber__, __WEBPACK_EXTERNAL_MODULE_rxjs_internal_OuterSubscriber__, __WEBPACK_EXTERNAL_MODULE_rxjs_internal_observable_combineLatest__, __WEBPACK_EXTERNAL_MODULE_rxjs_internal_util_subscribeToResult__, __WEBPACK_EXTERNAL_MODULE_rxjs_operators__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./source/index.ts\");\n","import { ObservableInput, OperatorFunction, ObservedValueOf, from, Observable, Operator, Subscriber, Subscription } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { OuterSubscriber } from \"rxjs/internal/OuterSubscriber\";\nimport { InnerSubscriber } from \"rxjs/internal/InnerSubscriber\";\nimport { subscribeToResult } from \"rxjs/internal/util/subscribeToResult\";\n\n\ntype AlternMapOptions = { completeWithInner?: boolean, completeWithSource?: boolean };\n\n/* tslint:disable:max-line-length */\nexport function alternMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, options?: AlternMapOptions): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function alternMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, options: AlternMapOptions, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function alternMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, options: AlternMapOptions, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Same as switchMap except that, unlike switchMap, alternMap will unsubscribe from its previous inner Observable only after subscribing to the new inner Observable\n * \n * @see {@link switchMap}\n * @see {@link mergeMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method alternMap\n * @owner Observable\n */\nexport function alternMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  options?: AlternMapOptions,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      alternMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ), options)\n    );\n  }\n  return (source: Observable<T>) => source.lift(new AlternMapOperator(project, options || {}));\n}\n\nclass AlternMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>, private options: AlternMapOptions,) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new AlternMapSubscriber(subscriber, this.project, this.options));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AlternMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private innerSubscription: Subscription | null | undefined;\n\n  constructor(destination: Subscriber<R>,\n    private project: (value: T, index: number) => ObservableInput<R>,\n    private options: AlternMapOptions) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error!(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<R>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    const { innerSubscription } = this;\n    if (!innerSubscription || innerSubscription.closed || this.options.completeWithSource) {\n      super._complete();\n    }\n    this.unsubscribe();\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null!;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.innerSubscription = null!;\n    if (this.isStopped || this.options.completeWithInner) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n    outerIndex: number, innerIndex: number,\n    innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next!(innerValue);\n  }\n}","export * from './altern-map'","var pSlice = Array.prototype.slice;\nvar Object_keys = typeof Object.keys === 'function'\n    ? Object.keys\n    : function (obj) {\n        var keys = [];\n        for (var key in obj) keys.push(key);\n        return keys;\n    }\n;\n\nvar deepEqual = module.exports = function (actual, expected) {\n  // enforce Object.is +0 !== -0\n  if (actual === 0 && expected === 0) {\n    return areZerosEqual(actual, expected);\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  } else if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  } else if (isNumberNaN(actual)) {\n    return isNumberNaN(expected);\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (typeof actual != 'object' && typeof expected != 'object') {\n    return actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction isNumberNaN(value) {\n  // NaN === NaN -> false\n  return typeof value == 'number' && value !== value;\n}\n\nfunction areZerosEqual(zeroA, zeroB) {\n  // (1 / +0|0) -> Infinity, but (1 / -0) -> -Infinity and (Infinity !== -Infinity)\n  return (1 / zeroA) === (1 / zeroB);\n}\n\nfunction objEquiv(a, b) {\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b);\n  }\n  try {\n    var ka = Object_keys(a),\n        kb = Object_keys(b),\n        key, i;\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key])) return false;\n  }\n  return true;\n}\n","export * as map from './map';\nexport type {\n  BadApp, App, AppX, BAD_APP_MARKER, DepConstaint, DependentType, FromEntries,\n  Fun, Invariant, KeysOfType, KeysOfTypeObj, TypeFuncs, keytype\n} from './types.d';\n","import { keytype, DepConstaint, AppX } from './types';\n\nexport const conf: {\n  Promise: {\n    all<T>(values: readonly (T | PromiseLike<T>)[]): PromiseLike<T[]>,\n    resolve<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n  }\n} = { Promise }\n\ntype Pair = 0 | 1;\nexport const depMap = <dom extends keytype, cim extends Record<Pair, [any, any]>, k extends DepConstaint<Pair, dom, cim>>(arr: cim[0][1][], p: <X extends dom>(a: AppX<0, cim, k, X>, i: number) => AppX<1, cim, k, X>) => {\n  const r: cim[1][1][] = [];\n  arr.forEach((v, i) => r[i] = p(v, i));\n  return r as cim[1][1][] & { [X in dom]: AppX<1, cim, k, X> };\n};\n\n\nexport const asyncDepMap = <dom extends keytype, cim extends Record<Pair, [any, any]>, k extends DepConstaint<Pair, dom, cim>>(\n  arr: cim[0][1][],\n  p: <X extends dom>(a: AppX<0, cim, k, X>, i: number) => AppX<1, cim, k, X> | PromiseLike<AppX<1, cim, k, X>>,\n  Promise = conf.Promise,\n) => {\n  const r: cim[1][1][] = [];\n  return Promise.all(arr.map((v, i) => Promise.resolve(p(v, i)).then(x => r[i] = x))).then(() => r as cim[1][1][] & { [X in dom]: AppX<1, cim, k, X> });\n};\n","import { from, noop, Observable, Subscription } from 'rxjs';\nimport { List, Node } from './linked-list';\n\nexport type Cancellable<V> = {\n  ok?: undefined; value?: undefined; error?: undefined;\n} | {\n  ok: true; value: V; error?: undefined;\n};\nexport type Result<V> = Cancellable<V> | {\n  ok: false; value?: undefined; error: unknown;\n};\n\nexport const iterate = async <V>(\n  it: AsyncIterator<void, V, boolean>,\n  getPauser?: () => (PromiseLike<void> | void),\n  onCancel?: (cb: () => void) => void,\n): Promise<Cancellable<V>> => {\n  let cancelled = false, v = await it.next();\n  if (onCancel) onCancel(() => {\n    cancelled = true;\n    it.next(true).catch(noop);\n  });\n  while (!cancelled && !v.done) {\n    const pauser = getPauser && getPauser();\n    if (pauser) await pauser;\n    else v = await it.next(false);\n  }\n  return !cancelled && v.done ? { ok: true, value: v.value } : {};\n};\n\n/** Configuration for the mapper, V is the type of the output */\nexport type Config<V> = {\n  /** @property {Function} handleException is invoked whenever the source observable throws an error,\n   * it optionally returns a value to be emitted */\n  handleException?: (e: unknown) => Cancellable<V>;\n  /** @property {String} mode the mode used while subscribing to inner observables.\n   * accepts:\n   * * `merge`: emits results from mappers whenever they are ready\n   * * `switch`: cancels the current mappers at the reception of a new value \n   * * `concurrent`: pauses the execution of actual mapper in favor to next one until then resumes its execution only when the newer fails\n   * * `recent`: just like concurrent it emits only the recent values but it doesn't pause the execution of any mapper\n   * @default 'concurrent'*/\n  mode?: 'merge' | 'switch' | 'recent' | 'concurrent';\n  /** @property {bool} wait indicates whether the unsubscription from the source `Observable` should or not\n   * trigger the interruption of the current async mapper\n   * @default false */\n  wait?: boolean;\n};\n\n\nexport const asyncMap = <T, V>(\n  map: (\n    value: T, node: Node,\n    status: { readonly closed: boolean; },\n    getPauser: () => (PromiseLike<void> | void), onCancel: (cb: () => void) => void\n  ) => PromiseLike<Cancellable<V>>,\n  { handleException, wait = false, mode = 'concurrent' }: Config<V> = {}\n) => (source: Observable<T>) => new Observable<V>(subscriber => {\n  let lift = Subscription.EMPTY;\n  const merge = mode === 'merge', continuous = mode === 'recent';\n  const list = new List(), pause = !merge && !continuous, switchMode = mode === 'switch';\n  const promiseMap = new WeakMap<Node, PromiseLike<void>>(), resolveMap = new WeakMap<Node, () => void>();\n  const sourceSubscription = source.subscribe({\n    next: v => {\n      const prev = lift, actual = lift = new Subscription(), node = list.unshift();\n      promiseMap.set(node, new Promise(r => resolveMap.set(node, r)));\n      actual.add(() => list.remove(node));\n      const promise = map(\n        v, node, { get closed() { return actual.closed; } },\n        () => pause && node.next ? promiseMap.get(node.next) : undefined, cb => actual.add(cb)\n      ).then<Result<V>, Result<V>>(undefined, e => ({ ok: false, error: e }));\n      actual.add(from(promise).subscribe(({ ok, value, error }) => {\n        if (!ok) {\n          if (error && handleException) {\n            const cancellable = handleException(error);\n            if (cancellable.ok) subscriber.next(cancellable.value);\n          }\n          list.remove(node);\n          resolveMap.get(node)!();\n          return prev.add(actual);\n        }\n        subscriber.next(value);\n        if (merge) prev.add(actual);\n        else actual.unsubscribe();\n      }));\n      if (switchMode) return prev.unsubscribe();\n      else actual.add(prev);\n    },\n    error: e => subscriber.error(e),\n    complete: () => lift.add(() => subscriber.complete())\n  });\n  const subs = wait ? new Subscription() : sourceSubscription;\n  if (wait) subs.add(sourceSubscription);\n  subs.add(() => lift.unsubscribe());\n  return subs;\n});\n\nexport const iterateMap = <T, V>(\n  map: (value: T, node: Node, status: { readonly closed: boolean; }) => AsyncGenerator<void, V, boolean>,\n  config: Config<V> = { mode: 'concurrent' }\n) => asyncMap(\n  (value: T, node, status, getPause, onCancel) => iterate(map(value, node, status), getPause, onCancel),\n  config\n);\n","export * from './async-map';\nexport * from './linked-list';","export interface Node<T = void> { value: T; next?: Node<T>; prev?: Node<T>; list: List<T>; };\nexport class List<T = void> implements Iterable<Node<T>> {\n  private *iterator(node = this.head) {\n    while (node) {\n      yield node;\n      node = node.next;\n    }\n  }\n  [Symbol.iterator](): Iterator<Node<T>> {\n    return this.iterator();\n  }\n  head?: Node<T>;\n  tail?: Node<T>;\n  unshift(value: T): Node<T> {\n    const next = this.head;\n    const node = this.head = { value, next, list: this };\n    if (next) next.prev = this.head;\n    if (!this.tail) this.tail = this.head;\n    return node;\n  }\n  remove(node: Node<T>) {\n    if (this.head === node) this.head = node.next;\n    if (this.tail === node) this.tail = node.prev;\n    if (node.next) {\n      node.next.prev = node.prev;\n      node.next = undefined;\n    }\n    if (node.prev) {\n      node.prev.next = node.next;\n      node.prev = undefined;\n    }\n  }\n}\n\n","import { BehaviorSubject, Observable, Subscription, TeardownLogic } from 'rxjs';\r\nimport { alternMap } from 'altern-map';\r\nimport { eagerCombineAll } from '../utils/rx-utils';\r\nimport { map, shareReplay, distinctUntilChanged, scan, tap } from 'rxjs/operators';\r\nimport { TVCDA_CIM, TVCDADepConstaint, EHConstraint, CtxEH, RequestHandlerCompare, ObsWithOrigin, ArrKeys } from './types';\r\nimport type { AppX, KeysOfType } from 'dependent-type';\r\nimport { byKey } from '../utils/guards';\r\nimport '../utils/rx-utils'\r\n\r\nexport type TwoDestructable<A extends unknown[], EH extends EHConstraint<EH, ECtx>, ECtx> = ObsWithOrigin<A[number], EH, ECtx>[] & {\r\n  [k in Exclude<keyof A, keyof any[]>]: ObsWithOrigin<A[k], EH, ECtx>;\r\n};\r\n\r\nexport type DeepDestructable<A extends unknown[], n extends 1 | 2, EH extends EHConstraint<EH, ECtx>, ECtx> = (n extends 1 ? ObsWithOrigin<A[number], EH, ECtx> : TwoDestructable<A[number] & unknown[], EH, ECtx>)[] & {\r\n  [k in Exclude<keyof A, keyof any[]>]: n extends 1 ? ObsWithOrigin<A[k], EH, ECtx> : TwoDestructable<A[k] & unknown[], EH, ECtx>;\r\n};\r\nexport type EntryObs<D, A extends unknown[], n extends 1 | 2, EH extends EHConstraint<EH, ECtx>, ECtx> = {\r\n  args: DeepDestructable<A, n, EH, ECtx>, data: D, n: n\r\n};\r\n\r\nexport const destructableCmp = <dom, cim extends TVCDA_CIM, k extends TVCDADepConstaint<dom, cim>, n extends 1 | 2, EH extends EHConstraint<EH, ECtx>, ECtx>({\r\n  compareData = <X extends dom>(x: AppX<'D', cim, k, X>, y: AppX<'D', cim, k, X>) => x === y,\r\n  compareObs = <X extends dom, i extends number>(x: ObsWithOrigin<AppX<'A', cim, k, X>[i], EH, ECtx>, y: ObsWithOrigin<AppX<'A', cim, k, X>[i], EH, ECtx>) => x === y\r\n} = {}): RequestHandlerCompare<dom, cim, k, n, EH, ECtx> => <X extends dom>(\r\n  x: EntryObs<AppX<'D', cim, k, X>, AppX<'A', cim, k, X>, n, EH, ECtx>, y: EntryObs<AppX<'D', cim, k, X>, AppX<'A', cim, k, X>, n, EH, ECtx>\r\n) => x.args.length === y.args.length && x.args.every((v, i) => {\r\n  type A = AppX<\"A\", cim, k, X>;\r\n  type item = ObsWithOrigin<A[number], EH, ECtx> | TwoDestructable<A[number] & unknown[], EH, ECtx>;\r\n  const vItem: item = v, yItem: item = y.args[i];\r\n  if (vItem instanceof Array) {\r\n    if (yItem instanceof Array) return vItem.length === yItem.length && vItem.every(x => x === yItem[i]);\r\n    return false;\r\n  }\r\n  if (yItem instanceof Array) return false;\r\n  return compareObs(vItem, yItem);\r\n}) && compareData(x.data, y.data);\r\n\r\nexport class Destructable<dom, cim extends TVCDA_CIM, k extends TVCDADepConstaint<dom, cim>, X extends dom, n extends 1 | 2, EH extends EHConstraint<EH, ECtx>, ECtx, $V extends (v: AppX<'V', cim, k, X>) => void = (v: AppX<'V', cim, k, X>) => void>\r\n  extends Observable<Parameters<$V>[0]> implements ObsWithOrigin<Parameters<$V>[0], EH, ECtx> {\r\n  readonly subject: BehaviorSubject<EntryObs<AppX<'D', cim, k, X>, AppX<'A', cim, k, X>, n, EH, ECtx>>;\r\n  private destroy: Subscription;\r\n  get destroyed() { return this.destroy.closed }\r\n  source: Observable<Parameters<$V>[0]>;\r\n  readonly origin = this;\r\n  readonly parent = this;\r\n  get handler(): CtxEH<dom, cim, k, n, EH, ECtx> {\r\n    return byKey<EHConstraint<EH, ECtx>, CtxEH<dom, cim, k, n, EH, ECtx>>(this.handlers, this.key);\r\n  }\r\n  add(teardown: TeardownLogic) {\r\n    return this.destroy.add(teardown);\r\n  }\r\n  constructor(\r\n    readonly handlers: EH,\r\n    readonly key: KeysOfType<EHConstraint<EH, ECtx>, CtxEH<dom, cim, k, n, EH, ECtx>> & string,\r\n    readonly c: AppX<'C', cim, k, X>,\r\n    init: EntryObs<AppX<'D', cim, k, X>, AppX<'A', cim, k, X>, n, EH, ECtx>,\r\n    compare = destructableCmp<dom, cim, k, n, EH, ECtx>(),\r\n    ...teardownList: TeardownLogic[]\r\n  ) {\r\n    super();\r\n    type C = AppX<'C', cim, k, X>;\r\n    type D = AppX<'D', cim, k, X>;\r\n    type A = AppX<'A', cim, k, X>;\r\n    type V = Parameters<$V>[0];\r\n    const handler = this.handler;\r\n    this.subject = new BehaviorSubject(init);\r\n    const destroy = this.destroy = new Subscription();\r\n    destroy.add(handler.destroy?.(init.data));\r\n    teardownList.forEach(cb => destroy.add(cb));\r\n    destroy.add(() => {\r\n      if (!this.subject.isStopped) this.subject.unsubscribe();\r\n      else this.subject.closed = true;\r\n    });\r\n    this.source = new Observable<V>(subscriber => {\r\n      const subs = this.subject.pipe(\r\n        distinctUntilChanged(compare),\r\n        alternMap(({ args, data }) => {\r\n          const array = args.map(args => args instanceof Array ? eagerCombineAll(args) : args);\r\n          return (eagerCombineAll(array) as Observable<A>).pipe(\r\n            map(args => [args, data, c] as [A, D, C]),\r\n          )\r\n        }, { completeWithInner: true, completeWithSource: true }),\r\n        tap({ error: err => this.subject.error(err), complete: () => this.subject.complete() }),\r\n        scan<[A, D, C], V, null>((old, [args, data, c]) => handler.ctr(args, data, c, old, this), null)\r\n      ).subscribe(subscriber);\r\n      subs.add(this.destroy);\r\n      return subs;\r\n    });\r\n    this.operator = shareReplay({ bufferSize: 1, refCount: true })(this).operator;\r\n  }\r\n}\r\n","/// <reference path=\"../typings/deep-is.d.ts\" />\r\n\r\nimport { CtxH, Ref, EHConstraint, DestructableCtr, ref, CtxEH, JsonObject, Json, TVCDA_CIM, ObsWithOrigin, ArrKeys } from './types';\r\nimport { DeepDestructable, Destructable, EntryObs, TwoDestructable } from './destructable';\r\nimport { map as dep_map, AppX, DepConstaint, TypeFuncs, KeysOfType, App } from 'dependent-type';\r\nimport type { BadApp, Fun } from 'dependent-type';\r\nimport { toCond } from '../utils/guards';\r\nimport { deref } from '.';\r\nimport { identity, TeardownLogic } from 'rxjs';\r\nimport equal from 'deep-is';\r\n\r\nconst { depMap } = dep_map;\r\n\r\n/** @summary Filters X by C */\r\nexport declare const F_F: unique symbol;\r\n/** @summary Returns constant C */\r\nexport declare const F_C: unique symbol;\r\n/** @summary Identity */\r\nexport declare const F_ID: unique symbol;\r\n\r\n\r\nexport type F_F = typeof F_F;\r\nexport type F_C = typeof F_C;\r\nexport type F_ID = typeof F_ID;\r\n\r\nexport declare const F_MapArr: unique symbol;\r\nexport type F_MapArr = typeof F_MapArr;\r\nexport declare const F_ArrArgs: unique symbol;\r\nexport type F_ArrArgs = typeof F_ArrArgs;\r\nexport declare const F_MapArgs: unique symbol;\r\nexport type F_MapArgs = typeof F_MapArgs;\r\nexport declare const F_ToMap: unique symbol;\r\nexport type F_ToMap = typeof F_ToMap;\r\nexport declare const F_Destructable: unique symbol;\r\nexport type F_Destructable = typeof F_Destructable;\r\nexport declare const F_Ref: unique symbol;\r\nexport type F_Ref = typeof F_Ref;\r\n\r\nexport type ToRef<X extends unknown[]> = Ref<X[number]>[] & { [P in Exclude<keyof X, keyof any[]>]: Ref<X[P] & X[number]> };\r\nexport type ToRefMap<X extends [object, unknown]> = [Ref<X[0]>, Ref<X[1]>][];\r\ndeclare module 'dependent-type' {\r\n  export interface TypeFuncs<C, X> {\r\n    [F_F]: X extends C ? X : BadApp<Fun<typeof F_F, C>, X>;\r\n    [F_C]: C,\r\n    [F_ID]: X,\r\n    [F_ArrArgs]: ToRef<X & unknown[]>,\r\n    [F_MapArr]: X extends [object, unknown] ? [X[0], X[1]][] : BadApp<Fun<typeof F_MapArr, C>, X>,\r\n    [F_ToMap]: X extends [object, unknown] ? Map<X[0], X[1]> : BadApp<Fun<typeof F_ToMap, C>, X>,\r\n    [F_MapArgs]: X extends [object, unknown] ? ToRefMap<X> : BadApp<Fun<typeof F_ArrArgs, C>, X>,\r\n    [F_Destructable]: ObsWithOrigin<C[0 & keyof C][X & Exclude<keyof C[0 & keyof C], ArrKeys>] & C[0 & keyof C][keyof C[0 & keyof C] & number], C[1 & keyof C], C[2 & keyof C]>,\r\n    [F_Ref]: Ref<C[X & Exclude<keyof C, ArrKeys>] & C[keyof C & number]>,\r\n  }\r\n}\r\n\r\n\r\nexport type ArrayCim = { T: [never, Ref<unknown>[]], V: [never, unknown[]], C: [null, null], D: [null, null], A: [never, unknown[]] };\r\nexport type ArrayTypeKeys = { T: typeof F_ArrArgs, V: typeof F_ID, C: typeof F_C, D: typeof F_C, A: typeof F_ID };\r\nexport const ArrayN = 1;\r\nexport type ArrayN = typeof ArrayN;\r\n\r\nexport type ArrayHandler<EH extends EHConstraint<EH, ECtx>, ECtx> = CtxH<unknown[], ArrayCim, ArrayTypeKeys, ArrayN, EH, ECtx>;\r\nexport const ArrayHandler = <EH extends EHConstraint<EH, ECtx>, ECtx>(): ArrayHandler<EH, ECtx> => ({\r\n  decode: ({ deref }) => <C extends unknown[]>(_id: string, data: AppX<'T', ArrayCim, ArrayTypeKeys, C>) => {\r\n    type dom = Exclude<keyof C, keyof any[]>;\r\n    return {\r\n      args: depMap<dom, [[C, unknown], [[C, EH, ECtx], ObsWithOrigin<C[dom], EH, ECtx>]], [F_Ref, F_Destructable]>(\r\n        data, ref => deref(ref)), data: null, n: ArrayN\r\n    }\r\n  },\r\n  encode: ({ ref }) => <C extends unknown[]>({ args }: { args: DeepDestructable<C, ArrayN, EH, ECtx> }): AppX<'T', ArrayCim, ArrayTypeKeys, C> => {\r\n    type dom = Exclude<keyof C, keyof any[]>;\r\n    type cim = [[[C, EH, ECtx], unknown], [C, Ref<C[dom]>],];\r\n    const encoded: Ref<C[dom]>[] & { [X in dom]: Ref<C[X]> } = depMap<dom, cim, [typeof F_Destructable, typeof F_Ref]>(\r\n      args, <X extends dom>(x: AppX<0, cim, [typeof F_Destructable], X>): AppX<0, [cim[1]], [typeof F_Ref], X> => ref<C[X & Exclude<keyof C, ArrKeys>] & C[number]>(x)\r\n    );\r\n    return encoded;\r\n  },\r\n  ctr: <X extends unknown[]>(x: X, _d: null, _c: null, old: unknown[] | null) => {\r\n    if (old) { old.splice(0); x = Object.assign(old, x); }\r\n    return x;\r\n  },\r\n});\r\n\r\nexport type ArrayDestructable<A extends unknown[], EH extends EHConstraint<EH, ECtx>, ECtx> = Destructable<unknown[], ArrayCim, ArrayTypeKeys, A, ArrayN, EH, ECtx>;\r\nexport type ArrayWithOrigin<A extends unknown[], EH extends EHConstraint<EH, ECtx>, ECtx> = ObsWithOrigin<A, EH, ECtx> & {\r\n  origin: ArrayDestructable<A, EH, ECtx>\r\n};\r\nexport const wrapArray = <EH extends EHConstraint<EH, ECtx> & { Array: ArrayHandler<EH, ECtx> }, ECtx>(handlers: EH) => <A extends unknown[]>(\r\n  args: DeepDestructable<AppX<'A', ArrayCim, ArrayTypeKeys, A> & A, ArrayN, EH, ECtx>, ...teardownList: TeardownLogic[]\r\n): ArrayDestructable<A, EH, ECtx> => new Destructable(\r\n  handlers, 'Array', null, { data: null, args, n: ArrayN }, undefined, ...teardownList\r\n);\r\n\r\nexport const toArray = <EH extends EHConstraint<EH, ECtx> & { Array: ArrayHandler<EH, ECtx> }, ECtx>(\r\n  deref: deref<EH, ECtx>\r\n) => <T extends unknown[]>(p: Ref<T>) => deref<0, [[unknown[], ArrayCim]], [ArrayTypeKeys], [T], [ArrayN]>(p, 'Array');\r\n\r\n// export type MapCim = { T: [never, [Ref<object>, Ref<unknown>][]], V: [never, Map<object, unknown>], C: [null, null], D: [null, null], A: [never, [object, unknown][]] };\r\n// export type MapTypeKeys = { T: typeof F_MapArgs, V: typeof F_ToMap, C: typeof F_C, D: typeof F_C, A: typeof F_MapArr };\r\n// export const MapN = 2;\r\n// export type MapN = typeof MapN;\r\n// export const MapCtr: DestructableCtr<[object, unknown], MapCim, MapTypeKeys> = <X extends [object, unknown]>(\r\n//   args: [X[0], X[1]][], _d: null, _c: null, old: Map<X[0], X[1]> | null\r\n// ): AppX<\"V\", MapCim, MapTypeKeys, X> => {\r\n//   const res = toCond<[object, unknown], X, Map<X[0], X[1]>>(old ?? new Map);\r\n//   if (old) { old.clear(); };\r\n//   args.forEach(([k, v]) => res.set(k, v));\r\n//   return res;\r\n// }\r\n\r\n// export type MapHandler<EH extends EHConstraint<EH, ECtx>, ECtx> = CtxH<[object, unknown], MapCim, MapTypeKeys, MapN, EH, ECtx>;\r\n// export const MapHandler = <EH extends EHConstraint<EH, ECtx>, ECtx>(): MapHandler<EH, ECtx> => ({\r\n//   decode: ({ deref }) => <X extends [object, unknown]>(_id: string, data: AppX<\"T\", MapCim, MapTypeKeys, X>): EntryObs<null, AppX<\"A\", MapCim, MapTypeKeys, X>, 2, EH, ECtx> => ({ \r\n//     args: data.map<[TypedDestructable<X[0], EH, ECtx>, TypedDestructable<X[1], EH, ECtx>]>(ref => [deref(ref[0]), deref(ref[1])]) as any as DeepDestructable<[X[0], X[1]][], 2, EH, ECtx>\r\n//     , data: null, n: MapN,\r\n//    }),\r\n//   encode: ({ ref }) => <C extends unknown[]>({ args }: { args: DeepDestructable<C, 1, EH, ECtx> }): AppX<'T', MapCim, MapTypeKeys, C> => toCond<unknown[], C, ToRef<C>>(\r\n//     depMap<Exclude<keyof C, keyof any[]>, [\r\n//       [[C, EH, ECtx], TypedDestructable<C[number], EH, ECtx>],\r\n//       [C, Ref<C[Exclude<keyof C, keyof any[]>]>],\r\n//     ], [typeof F_Destructable, typeof F_Ref]>(args, ref)),\r\n//   ctr: MapCtr,\r\n// });\r\n\r\n// export type MapDestructable<A extends unknown[], EH extends EHConstraint<EH, ECtx>, ECtx> = Destructable<unknown[], MapCim, MapTypeKeys, A, 1, EH, ECtx>;\r\n// export const wrapMap = <EH extends EHConstraint<EH, ECtx> & { Map: MapHandler<EH, ECtx> }, ECtx>(handlers: EH) => <A extends unknown[]>(\r\n//   args: DeepDestructable<A, 1, EH, ECtx>, ...teardownList: TeardownLogic[]\r\n// ): MapDestructable<A, EH, ECtx> => new Destructable(\r\n//   handlers, 'Map', null, { data: null, args, n: 1 }, undefined, ...teardownList\r\n// );\r\n\r\n// export const toMap = <EH extends EHConstraint<EH, ECtx> & { Map: MapHandler<EH, ECtx> }, ECtx>(\r\n//   deref: deref<EH, ECtx>\r\n// ) => <T>(p: Ref<T[]>) => deref<0, [[unknown[], MapCim]], [MapTypeKeys], [T[]], [1]>(p, 'Map');\r\n\r\n\r\n\r\nexport type JsonCim = { T: [never, JsonObject], V: [never, JsonObject], C: [null, null], D: [never, JsonObject], A: [[], []] };\r\nexport type JsonTypeKeys = { T: typeof F_ID, V: typeof F_ID, C: typeof F_C, D: typeof F_ID, A: typeof F_C };\r\nconst deepUpdate = <T extends JsonObject>(target: JsonObject, source: T) => {\r\n  const keys = (o: JsonObject) => Object.keys(o) as never[];\r\n  const onlyTargetKeys = new Set(keys(target));\r\n  for (const key of keys(source)) {\r\n    onlyTargetKeys.delete(key);\r\n    const targetItem = target[key] as Json | undefined, sourceItem = source[key] as Json;\r\n    if (targetItem && sourceItem && typeof targetItem === 'object' && typeof sourceItem === 'object' && Array.isArray(targetItem) === Array.isArray(sourceItem)) {\r\n      deepUpdate(targetItem, sourceItem);\r\n    } else target[key] = sourceItem as never;\r\n  }\r\n  for (const key of onlyTargetKeys) delete target[key];\r\n  return target as T;\r\n}\r\n\r\nconst clone = <T extends Json>(o: T): T => {\r\n  return o === null ? o : o instanceof Array ? o.map(clone) as T : typeof o === 'object' ? Object.fromEntries(Object.entries(o as JsonObject).map(([k, v]) => [k, clone(v)])) as T : o;\r\n};\r\n\r\nexport type JsonHandler<EH extends EHConstraint<EH, ECtx>, ECtx> = CtxH<JsonObject, JsonCim, JsonTypeKeys, 1, EH, ECtx>;\r\nexport const JsonHandler = <EH extends EHConstraint<EH, ECtx>, ECtx>(): JsonHandler<EH, ECtx> => ({\r\n  decode: () => (_id, data) => ({ args: [] as [], data, n: 1 }),\r\n  encode: () => ({ data, old }) => old && equal(data, old) ? undefined : clone(data),\r\n  ctr: <X extends JsonObject>(\r\n    _: [], data: X, _c: null, old: X | null\r\n  ) => old ? deepUpdate(old, data) : data,\r\n});\r\nexport type JsonDestructable<X extends JsonObject, EH extends EHConstraint<EH, ECtx>, ECtx> = Destructable<JsonObject, JsonCim, JsonTypeKeys, X, 1, EH, ECtx>;\r\nexport const wrapJson = <EH extends EHConstraint<EH, ECtx> & { Json: JsonHandler<EH, ECtx> }, ECtx>(handlers: EH) => <X extends JsonObject>(\r\n  data: X, ...teardownList: TeardownLogic[]\r\n): JsonDestructable<X, EH, ECtx> => new Destructable(\r\n  handlers, 'Json', null, { args: [] as [], data, n: 1 }, undefined, ...teardownList\r\n);\r\n\r\nexport const toJson = <EH extends EHConstraint<EH, ECtx> & { Json: JsonHandler<EH, ECtx> }, ECtx>(\r\n  deref: deref<EH, ECtx>\r\n) => (p: Ref<JsonObject>) => deref<0, [[JsonObject, JsonCim]], [JsonTypeKeys], [JsonObject], [1]>(p, 'Json');\r\n\r\n","export * from './store';\r\nexport * from './handlers';\r\nexport * from './destructable';\r\nexport * from './types';\r\nexport * from './proxy';\r\nexport * from 'dependent-type';\r\nexport type { Cancellable, Config, Result } from 'rx-async';\r\nexport * as rx_async from 'rx-async';\r\nexport * as altern_map from 'altern-map';\r\nexport * as utils from '../utils';","import { Store } from \"./store\";\r\nimport { Observable, Subject, Subscription } from \"rxjs\";\r\nimport { filter, take } from \"rxjs/operators\";\r\nimport { GlobalRef, RHConstraint, CallHandler, FdcpConstraint, FkxConstraint, FIDS } from \"./types\";\r\nimport { QuickPromise } from \"../utils/quick-promise\";\r\nimport { AppX } from \".\";\r\n\r\nexport type DataGram<T extends string> = { channel: number, type: T, data: string };\r\n\r\nexport type msg1to2 = 'put' | 'unsubscribe' | 'error' | 'complete' | 'call' | 'end_call';\r\nexport type msg2to1 = 'response_put' | 'response_id' | 'response_call' | 'call_error' | 'call_complete';\r\nexport const msg1to2keys: Record<msg1to2, 0> = { call: 0, complete: 0, error: 0, end_call: 0, put: 0, unsubscribe: 0 };\r\nexport const msg2to1keys: Record<msg2to1, 0> = { call_complete: 0, call_error: 0, response_call: 0, response_id: 0, response_put: 0 };\r\nexport const startListener = <RH extends RHConstraint<RH, ECtx>, ECtx, fIds extends FIDS, fdcp extends FdcpConstraint<fIds>, fkx extends FkxConstraint<fIds, fdcp>, e extends string = never>(\r\n  store: Store<RH, ECtx, fIds, fdcp, fkx>,\r\n  from: Observable<DataGram<msg1to2 | e>>,\r\n  to: { next: (x: DataGram<msg2to1>) => void },\r\n) => from.subscribe(function (this: Subscription, { channel, type, data }) {\r\n  type fId = fIds;\r\n  type V = AppX<'V', fdcp[fId][0][1], fkx[fId][0], fkx[fId][1]>;\r\n  switch (type) {\r\n    case 'put': {\r\n      const refs = store.unserialize<0, [[fdcp[fId][0][0], fdcp[fId][0][1]]], [fkx[fId][0]], [fkx[fId][1]], [fdcp[fId][0][2]]>(JSON.parse(data))!\r\n      return to.next({ channel, type: 'response_put', data: JSON.stringify(refs) });\r\n    }\r\n    case 'unsubscribe':\r\n      const ref = { id: JSON.parse(data) } as GlobalRef<V>;\r\n      return store.getValue(ref)[1].subscription?.unsubscribe()\r\n    case 'error': {\r\n      const { id, msg } = JSON.parse(data);\r\n      const ref = { id } as GlobalRef<V>;\r\n      const obs = store.getValue(ref)[0];\r\n      if (!obs) return;\r\n      return (obs as typeof obs.origin).subject.error(msg);\r\n    }\r\n    case 'complete': {\r\n      const ref = { id: JSON.parse(data) } as GlobalRef<V>;\r\n      const obs = store.getValue(ref)[0];\r\n      if (!obs) return;\r\n      return (obs as typeof obs.origin).subject.complete();\r\n    }\r\n    case 'call': {\r\n      const json = JSON.parse(data); json.ref = { id: json.argId };\r\n      const { fId, ref, opt, param }: {\r\n        fId: fId, param: fdcp[fId][2], ref: GlobalRef<V>,\r\n        opt: { ignore?: string[], graph?: boolean }\r\n      } = json;\r\n      const endCallSubs = from.pipe(filter(x => x.channel === channel && x.type === 'end_call')).subscribe(() => {\r\n        subs.unsubscribe();\r\n      });\r\n      const observer = {\r\n        error: (err: any) => to.next({ channel, type: 'call_error', data: JSON.stringify(err) }),\r\n        complete: () => to.next({ channel, type: 'call_complete', data: '' }),\r\n      };\r\n      const subs = opt.graph ? store.call(fId, param, ref, { ...opt, graph: true }).subscribe({\r\n        ...observer, next: def => {\r\n          to.next({ channel, type: 'response_call', data: JSON.stringify(def) });\r\n        }\r\n      }) : store.call(fId, param, ref, { ...opt, graph: false }).subscribe({\r\n        ...observer, next: ref => {\r\n          to.next({ channel, type: 'response_id', data: JSON.stringify(ref.id) });\r\n        }\r\n      });\r\n      subs.add(endCallSubs);\r\n      this.add(subs);\r\n      return;\r\n    }\r\n  };\r\n});\r\n\r\n\r\nexport const createCallHandler = <RH extends RHConstraint<RH, ECtx>, ECtx, fIds extends FIDS, fdcp extends FdcpConstraint<fIds>, fkx extends FkxConstraint<fIds, fdcp>, e extends string = never>(\r\n  to: { next: (x: DataGram<msg1to2>) => void },\r\n  from: Observable<DataGram<msg2to1 | e>>,\r\n  channel: [number]\r\n): CallHandler<RH, ECtx, fIds, fdcp, fkx> => {\r\n  return {\r\n    serialized: new WeakMap(),\r\n    handlers: <fId extends fIds>() => {\r\n      const callChannel = channel[0]++;\r\n      return {\r\n        end_call: () => to.next({ channel: callChannel, type: 'end_call', data: '' }),\r\n        unsubscribe: ref => to.next({ channel: callChannel, data: JSON.stringify(ref.id), type: 'unsubscribe' }),\r\n        put: (def) => {\r\n          const ch = channel[0]++;\r\n          const promise = from.pipe(filter(m => m.channel === ch && m.type === 'response_put'), take(1)).toPromise(QuickPromise).then(response => {\r\n            return JSON.parse(response.data);\r\n          });\r\n          to.next({ channel: ch, type: 'put', data: JSON.stringify(def) })\r\n          return promise;\r\n        },\r\n        error: (ref, e) => to.next({ channel: callChannel, data: JSON.stringify({ id: ref.id, msg: `${e}` }), type: 'error' }),\r\n        complete: ref => to.next({ channel: callChannel, data: JSON.stringify(ref.id), type: 'complete' }),\r\n        call: (fId, param, ref, opt) => to.next({ channel: callChannel, data: JSON.stringify({ fId, param, argId: ref.id, opt }), type: 'call' }),\r\n        subscribeToResult: cbs => from.pipe(filter(x => x.channel === callChannel && x.type in msg2to1keys)).subscribe(\r\n          function (this: Subscription, { data, type }) {\r\n            if (type === 'response_id') {\r\n              cbs.resp_id({ id: JSON.parse(data) } as GlobalRef<AppX<'V', fdcp[fId][1][1], fkx[fId][2], fkx[fId][3]>>);\r\n            }\r\n            if (type === 'response_call') {\r\n              cbs.resp_call(JSON.parse(data));\r\n            }\r\n            if (type === 'call_error') {\r\n              cbs.err_call(data).then(() => this.unsubscribe());\r\n              this.unsubscribe();\r\n            }\r\n            if (type === 'call_complete') {\r\n              cbs.comp_call().then(() => this.unsubscribe());\r\n            }\r\n          }\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport const createProxy = <RH extends RHConstraint<RH, ECtx>, ECtx, fIds extends FIDS, fdcp extends FdcpConstraint<fIds>, fkx extends FkxConstraint<fIds, fdcp>>(\r\n  store1: Store<RH, ECtx, fIds, fdcp, fkx>,\r\n  store2: Store<RH, ECtx, fIds, fdcp, fkx>,\r\n  msg1to2: Subject<DataGram<msg1to2 | msg2to1>>,\r\n  msg2to1: Subject<DataGram<msg1to2 | msg2to1>>,\r\n) => {\r\n  const subscription = new Subscription()\r\n  const channel = [0] as [0];\r\n  const callHandler = createCallHandler<RH, ECtx, fIds, fdcp, fkx, msg1to2>(msg1to2, msg2to1, channel);\r\n  subscription.add(startListener(store2, msg1to2, msg2to1));\r\n  subscription.add(store1.watch(callHandler));\r\n  return { channel, callHandler, subscription };\r\n};\r\n\r\n","import { Subscription, Observable, Subject } from 'rxjs';\r\nimport {\r\n  GlobalRef, LocalRef, Ref, deref, CtxH, TVCDA_CIM, TVCDADepConstaint,\r\n  ModelsDefinition, xDerefHandlers, ModelDefinition, derefReturn, EModelsDefinition,\r\n  xderef, derefHandlers, ref, RHConstraint, ObsWithOrigin, EHConstraint, xDerefHandler, derefHandler,\r\n  AnyModelDefinition, CallHandler, Functions, FdcpConstraint, FkxConstraint, FIDS, TypedDestructable\r\n} from './types'\r\nimport { Destructable, EntryObs } from './destructable';\r\nimport { KeysOfType, TypeFuncs, AppX, App, Fun } from 'dependent-type';\r\nimport { NonUndefined } from 'utility-types';\r\nimport { byKey } from '../utils/guards';\r\nimport { map as dep_map } from 'dependent-type';\r\nimport { eagerCombineAll, current } from '../utils/rx-utils';\r\nimport { defineProperty } from '../utils/global';\r\nimport { map, shareReplay, finalize, scan, filter, tap, mapTo } from 'rxjs/operators';\r\nimport { alternMap } from 'altern-map';\r\nimport { asyncMap, Cancellable } from 'rx-async';\r\nimport { DeepDestructable } from '.';\r\n\r\nconst { depMap } = dep_map;\r\n\r\ntype ObsCache<\r\n  indices extends number,\r\n  dcim extends Record<indices, [unknown, TVCDA_CIM]>,\r\n  keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n  X extends { [P in indices]: unknown },\r\n  N extends Record<indices, 1 | 2>,\r\n  EH extends EHConstraint<EH, ECtx>,\r\n  ECtx\r\n  > = {\r\n    [i in indices]?: {\r\n      obs: Destructable<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], EH, ECtx>,\r\n      id: string, subs?: Subscription\r\n    }\r\n  };\r\n\r\nexport declare const F_Custom_Ref: unique symbol;\r\nexport declare const F_I_X: unique symbol;\r\n\r\ntype ParentOfC = { 0: any, 1: any, 2: any };\r\ntype RefHelper<C extends ParentOfC, X extends number> = App<Fun<C[1][X], C[0][X][0]>, C[2][X]> & C[0][X][1];\r\ntype CondRefHelper<C, X> = RefHelper<C & ParentOfC, X & number>;\r\ntype GlobalRefHelper<indices extends number, C extends ParentOfC> = { [i in indices]: RefHelper<C, i & number> } & GlobalRef<unknown>[]\r\ndeclare module 'dependent-type' {\r\n  export interface TypeFuncs<C, X> {\r\n    [F_Custom_Ref]: CondRefHelper<C, X>;\r\n    [F_I_X]: { i: X };\r\n  }\r\n}\r\n\r\nexport type PromiseCtr = {\r\n  new <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): PromiseLike<T>;\r\n  all<T>(values: readonly (T | PromiseLike<T>)[]): PromiseLike<T[]>,\r\n  resolve<T>(value: T | PromiseLike<T>): PromiseLike<T>;\r\n}\r\n\r\n\r\nexport const runit = <R, N>(gen: Generator<N | PromiseLike<N>, R, N>, promiseCtr: PromiseCtr) => {\r\n  const runThen = (...args: [] | [N]): PromiseLike<R> => {\r\n    const v = args.length ? gen.next(args[0]) : gen.next();\r\n    if (v.done) return promiseCtr.resolve(v.value);\r\n    return promiseCtr.resolve(v.value).then(runThen);\r\n  }; return runThen();\r\n}\r\n\r\nexport function* wait<T>(x: T | PromiseLike<T>): Generator<T | PromiseLike<T>, T, T> {\r\n  return yield x;\r\n}\r\n\r\nexport function asAsync<T extends unknown[], R, U = void, N = unknown>(f: (this: U, ...args: T) => Generator<N | PromiseLike<N>, R, N>, promiseCtr: PromiseCtr, thisArg: U): (...args: T) => PromiseLike<R>;\r\nexport function asAsync<T extends unknown[], R, U = void, N = unknown>(f: (this: U | void, ...args: T) => Generator<N | PromiseLike<N>, R, N>, promiseCtr: PromiseCtr, thisArg?: U): (...args: T) => PromiseLike<R>;\r\nexport function asAsync<T extends unknown[], R, U = void, N = unknown>(f: (this: U, ...args: T) => Generator<N | PromiseLike<N>, R, N>, promiseCtr: PromiseCtr, thisArg: U): (...args: T) => PromiseLike<R> {\r\n  return (...args: T) => runit(f.call(thisArg, ...args as T), promiseCtr);\r\n}\r\nexport class BiMap<EH extends EHConstraint<EH, ECtx>, ECtx, D, k = string> {\r\n  private byId = new Map<k, [ObsWithOrigin<any, EH, ECtx>, D]>();\r\n  private byObs = new Map<TypedDestructable<unknown, EH, ECtx>, k>();\r\n  private oldId = new WeakMap<TypedDestructable<unknown, EH, ECtx>, k>();\r\n  constructor() { }\r\n  get(id: k) { return this.byId.get(id); }\r\n  delete(id: k) {\r\n    const stored = this.byId.get(id);\r\n    if (stored) this.byObs.delete(stored[0].origin);\r\n    return this.byId.delete(id);\r\n  }\r\n  set(id: k, value: [ObsWithOrigin<unknown, EH, ECtx>, D]) {\r\n    if (this.byObs.has(value[0].origin)) throw new Error('Object already in store');\r\n    if (this.byId.has(id)) throw new Error('Id already used');\r\n    this.byObs.set(value[0].origin, id);\r\n    this.oldId.set(value[0].origin, id);\r\n    this.byId.set(id, value);\r\n  };\r\n  reuseId(obs: ObsWithOrigin<unknown, EH, ECtx>, id: k) {\r\n    this.oldId.set(obs.origin, id);\r\n  };\r\n  finddir(obs: ObsWithOrigin<unknown, EH, ECtx>): [k, 'up' | 'down' | 'exact'] | undefined {\r\n    const origin = obs.origin, id = this.byObs.get(origin);\r\n    if (id === undefined) return undefined;\r\n    const found = this.byId.get(id)![0];\r\n    let upfound = found, upobs = obs;\r\n    if (found === obs) return [id, 'exact'];\r\n    const foundParents = new Set([upfound]), obsParents = new Set([upobs]);\r\n    const err = new Error('Another observable with the same origin is in the store');\r\n    while (true) {\r\n      const done = !obsParents.add(upobs = upobs.parent) && !foundParents.add(upfound = upfound.parent);\r\n      if (obsParents.has(upfound) || foundParents.has(upobs)) {\r\n        if (upfound === obs) return [id, 'down'];\r\n        if (upobs === found) return [id, 'up'];\r\n        throw err;\r\n      }\r\n      if (done) throw err;\r\n      upobs = upobs.parent;\r\n      upfound = upfound.parent;\r\n    }\r\n  }\r\n  find(obs: ObsWithOrigin<unknown, EH, ECtx>, any = false) {\r\n    return any ? this.byObs.get(obs.origin) : this.finddir(obs)?.[0];\r\n  };\r\n  usedId(obs: ObsWithOrigin<unknown, EH, ECtx>) {\r\n    return this.oldId.get(obs.origin);\r\n  };\r\n  get size() { return this.byId.size }\r\n  keys() { return this.byId.keys() }\r\n  entries() { return this.byId.entries() }\r\n  values() { return this.byId.values() }\r\n}\r\n\r\ntype Notif<RH extends RHConstraint<RH, ECtx>, ECtx> = [\r\n  'next', EModelsDefinition<0, [[unknown, TVCDA_CIM]], [TVCDADepConstaint<unknown, TVCDA_CIM>], [unknown], [1 | 2], RH, ECtx>\r\n] | ['error', GlobalRef<unknown>, unknown] | ['complete', GlobalRef<unknown>] | ['unsubscribe', GlobalRef<unknown>];\r\n\r\nconst one = BigInt(1);\r\n\r\n/** Options of serialization */\r\ntype SerializationOptions = {\r\n  /** @property {boolean} isNew whether the first entry of the first emission should be indicated new or not */\r\n  isNew: boolean,\r\n  /**\r\n   * @property {boolean} push whether the observable should be pushed into the store or not\r\n   * @default true\r\n   */\r\n  push?: boolean,\r\n  /**\r\n   * @property {string[]} ignore ids of destructables that should be ignored from serialization \r\n   */\r\n  ignore?: string[],\r\n}\r\n\r\nexport type LocalObs<RH extends RHConstraint<RH, ECtx>, ECtx> = [ObsWithOrigin<unknown, RH, ECtx>, { id: string, in?: boolean, out?: boolean }];\r\n\r\nexport class Store<RH extends RHConstraint<RH, ECtx>, ECtx,\r\n  fIds extends FIDS,\r\n  fdcp extends FdcpConstraint<fIds>,\r\n  fkx extends FkxConstraint<fIds, fdcp>,\r\n  > {\r\n  protected map: BiMap<RH, ECtx, { subscription?: Subscription, externalId?: PromiseLike<string> }>;\r\n  readonly locals: BiMap<RH, ECtx, { in?: boolean, out?: boolean }>;\r\n  constructor(\r\n    readonly handlers: RH, private extra: ECtx, private promiseCtr: PromiseCtr,\r\n    private functions: Functions<RH, ECtx, fIds, fdcp, fkx> | null = null,\r\n    readonly name?: string, readonly prefix = '',\r\n    locals: LocalObs<RH, ECtx>[] = [],\r\n    readonly base = false,\r\n  ) {\r\n    this.functions = functions;\r\n    this.map = new BiMap();\r\n    this.locals = new BiMap();\r\n    for (const [obs, { id, in: isIn, out: isOut }] of locals) this.locals.set(id, [obs, { in: isIn, out: isOut }]);\r\n  }\r\n\r\n  private next = one;\r\n  private pushed = new Map<ObsWithOrigin<unknown, RH, ECtx>, string>();\r\n  private pushes = new Subject<[ObsWithOrigin<unknown, RH, ECtx>, string, boolean]>();\r\n  readonly changes = new Observable<Notif<RH, ECtx>>(subscriber => {\r\n    const map = new Map<ObsWithOrigin<unknown, RH, ECtx>, Subscription>();\r\n    const ctx = this.emptyContext;\r\n    const watch = <dom, cim extends TVCDA_CIM, k extends TVCDADepConstaint<dom, cim>, X extends dom, n extends 1 | 2>(obs: ObsWithOrigin<AppX<'V', cim, k, X>, RH, ECtx> & { origin: Destructable<dom, cim, k, X, n, RH, ECtx> }, id: string): Subscription => {\r\n      const origin = obs.origin, encoder = origin.handler.encode(ctx);\r\n      return origin.subject.pipe(scan((prev: { old?: AppX<'T', cim, k, X> }, v) => {\r\n        const c: AppX<\"C\", cim, k, X> = origin.c;\r\n        const params = { ...v, ...('old' in prev ? { old: prev.old } : {}), c };\r\n        return { old: encoder(params), params }\r\n      }, {}), filter(({ old: v }) => v !== undefined)).subscribe(\r\n        ({ old: data, params }) => {\r\n          subscriber.next(['next', [{\r\n            c: origin.c, i: 0, data, id, new: !('old' in (params ?? {})), type: origin.key\r\n          }]]);\r\n        },\r\n        err => subscriber.next(['error', { id } as GlobalRef<unknown>, err]),\r\n        () => subscriber.next(['complete', { id } as GlobalRef<unknown>]));\r\n    }\r\n    for (const [obs, id] of this.pushed) map.set(obs, watch(obs, id));\r\n    subscriber.add(this.pushes.subscribe(([obs, id, add]) => {\r\n      if (add) map.set(obs, watch(obs, id));\r\n      else {\r\n        // console.log('remove', this.map.find(obs));\r\n        const isStopped = (obs: ObsWithOrigin<unknown, RH, ECtx>): boolean => {\r\n          const subject = obs.origin.subject;\r\n          if (subject.isStopped) return true;\r\n          return subject.value.args.some(args => args instanceof Array ? args.some(isStopped) : isStopped(args))\r\n        };\r\n        if (!isStopped(obs)) subscriber.next(['unsubscribe', { id } as GlobalRef<unknown>])\r\n        map.get(obs)!.unsubscribe();\r\n        map.delete(obs);\r\n      };\r\n    }))\r\n  });\r\n\r\n  subscribeToLocals($local?: Subscription | undefined) {\r\n    const subs = new Subscription();\r\n    const local: Subscription | undefined = $local ?? (this.base ? subs : undefined);\r\n    for (const [, [obs]] of this.locals.entries()) {\r\n      subs.add(this.push(obs, { local }).subscription);\r\n    }\r\n    return subs;\r\n  }\r\n\r\n  private getNext(id?: string): string {\r\n    if (id === undefined) return `${this.prefix}${this.next++}`;\r\n    return id;\r\n  }\r\n\r\n  watch(callHandler: CallHandler<RH, ECtx, 0, FdcpConstraint<0>, FkxConstraint<0, FdcpConstraint<0>>>) {\r\n    const op = callHandler.handlers<0>();\r\n    return this.changes.subscribe(event => {\r\n      switch (event[0]) {\r\n        case 'next': return op.put(event[1]);\r\n        case 'error': return op.error(event[1], event[2]);\r\n        case 'complete': return op.complete(event[1]);\r\n        case 'unsubscribe': return op.unsubscribe(event[1]);\r\n      }\r\n    })\r\n  }\r\n\r\n  /** inserts a new destructable or updates a stored ObsWithOrigin using serialized data */\r\n  private _unserialize<\r\n    indices extends number,\r\n    dcim extends Record<indices, [unknown, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: unknown },\r\n    N extends Record<indices, 1 | 2>,\r\n    i extends indices,\r\n    >(\r\n      key: KeysOfType<RHConstraint<RH, ECtx>, CtxH<dcim[i][0], dcim[i][1], keys[i], N[i], RH, ECtx>> & string,\r\n      ctx: ECtx & { ref: ref<RH, ECtx>, deref: deref<RH, ECtx>, xderef: xderef<RH, ECtx> },\r\n      models: ModelsDefinition<indices, dcim, keys, X, N, RH, ECtx> & { [_ in i]: ModelDefinition<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx> },\r\n      cache: ObsCache<indices, dcim, keys, X, N, RH, ECtx>,\r\n      i: i,\r\n  ): NonUndefined<ObsCache<indices, dcim, keys, X, N, RH, ECtx>[i]> {\r\n    const handler = byKey<RHConstraint<RH, ECtx>, CtxH<dcim[i][0], dcim[i][1], keys[i], N[i], RH, ECtx>>(this.handlers, key);\r\n    if (cache[i] !== undefined) return cache[i] as NonUndefined<typeof cache[i]>;\r\n    const model: ModelDefinition<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx> = models[i], { id: usedId } = model;\r\n    if (model.data === undefined) throw new Error('Trying to access a destructed object');\r\n    const id = this.getNext(usedId);\r\n    const local = this.locals.get(id)?.[1];\r\n    if (local && !local.in) {\r\n      throw new Error('Unexpected serialized observable');\r\n    }\r\n    const entry = handler.decode(ctx)(id, model.data, this.get(id)?.[0] ?? null);\r\n    if (usedId !== undefined) {\r\n      const stored = this.map.get(usedId);\r\n      if (stored !== undefined) {\r\n        const obs = stored[0].origin as Destructable<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx>;\r\n        if (obs.key !== model.type || obs.c !== model.c) {\r\n          throw new Error('Trying to update a wrong type');\r\n        }\r\n        obs.subject.next(entry);\r\n        const res: ObsCache<indices, dcim, keys, X, N, RH, ECtx>[i] = { id: usedId, obs, subs: stored[1].subscription };\r\n        return res as NonUndefined<typeof res>;\r\n      }\r\n    }\r\n    const obs = this._insert<indices, dcim, keys, X, N, i>(key, entry, ctx, id, model.c);\r\n    cache[i] = { obs, id };\r\n    return cache[i] as NonUndefined<typeof cache[i]>\r\n  }\r\n  /** inserts a new destructable into the store with a givin id */\r\n  private _insert<\r\n    indices extends number,\r\n    dcim extends Record<indices, [unknown, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: unknown },\r\n    N extends Record<indices, 1 | 2>,\r\n    i extends indices,\r\n    >(\r\n      key: KeysOfType<RHConstraint<RH, ECtx>, CtxH<dcim[i][0], dcim[i][1], keys[i], N[i], RH, ECtx>> & string,\r\n      entry: EntryObs<AppX<'D', dcim[i][1], keys[i], X[i]>, AppX<'A', dcim[i][1], keys[i], X[i]>, N[i], RH, ECtx>,\r\n      ctx: ECtx & { ref: ref<RH, ECtx>, deref: deref<RH, ECtx>, xderef: xderef<RH, ECtx> },\r\n      id: string,\r\n      c: AppX<'C', dcim[i][1], keys[i], X[i]>,\r\n  ) {\r\n    const handler = byKey<RHConstraint<RH, ECtx>, CtxH<dcim[i][0], dcim[i][1], keys[i], N[i], RH, ECtx>>(this.handlers, key);\r\n    const compare = handler.compare?.(ctx);\r\n    const obs = new Destructable<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx>(\r\n      this.handlers, key, c, entry, compare, () => this.map.delete(id));\r\n    this.map.set(id, [obs, {}]);\r\n    return obs;\r\n  }\r\n  ref: ref<RH, ECtx> = <V>(obs: ObsWithOrigin<V, RH, ECtx>): GlobalRef<V> => {\r\n    const id = this.map.find(obs)!;\r\n    return { id } as GlobalRef<V>;\r\n  };\r\n  checkTypes = <\r\n    indices extends number,\r\n    dcim extends Record<indices, [unknown, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: dcim[P][0] },\r\n    N extends Record<indices, 1 | 2>,\r\n    >(v: ObsWithOrigin<{ [P in indices]: dcim[P][1]['V'][1]; }[indices], RH, ECtx>,\r\n      ...args: [xDerefHandlers<indices, dcim, keys, X, N, RH, ECtx>] | [derefHandlers<indices, dcim, keys, N, RH, ECtx>, 0]) => {\r\n    const origin = v.origin;\r\n    const err = () => new Error('Type Mismatch : ' + origin.key + ' not in ' + JSON.stringify(\r\n      depMap(args[0], (x: xDerefHandler<indices, dcim, keys, X, N, RH, ECtx, indices> | derefHandler<indices, dcim, keys, N, RH, ECtx, indices>) => x instanceof Array ? x[0] : x)));\r\n    if (args.length === 1) {\r\n      if (args[0].length && !args[0].some(([key, c]) => origin.handler === byKey(this.handlers, key) && origin.c === c)) throw err();\r\n    } else {\r\n      const handlers: EHConstraint<RH, ECtx> = this.handlers;\r\n      if (args[0].length && !args[0].some(key => origin.handler === byKey(handlers, key))) throw err();\r\n    }\r\n    return v as derefReturn<indices, dcim, keys, X, N, RH, ECtx>;\r\n  };\r\n  getter = <T extends object, V extends T = T>(r: Ref<T>) => {\r\n    if (!('id' in r)) throw new Error('There is no local context');\r\n    return this.getValue(r)[0] as ObsWithOrigin<V, RH, ECtx>;\r\n  }\r\n  xderef = (getter: <T extends object, V extends T = T>(r: Ref<T>) => ObsWithOrigin<V, RH, ECtx>): xderef<RH, ECtx> => <\r\n    indices extends number,\r\n    dcim extends Record<indices, [unknown, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: dcim[P][0] },\r\n    N extends Record<indices, 1 | 2>,\r\n    >(\r\n      ref: Ref<{ [P in indices]: dcim[P][1]['V'][1] }[indices]>,\r\n      ...handlers: xDerefHandlers<indices, dcim, keys, X, N, RH, ECtx>\r\n    ): derefReturn<indices, dcim, keys, X, N, RH, ECtx> => this.checkTypes(getter(ref), handlers);\r\n  deref = (getter: <T extends object>(r: Ref<T>) => ObsWithOrigin<T, RH, ECtx>): deref<RH, ECtx> => <\r\n    indices extends number,\r\n    dcim extends Record<indices, [unknown, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: dcim[P][0] },\r\n    N extends Record<indices, 1 | 2>,\r\n    >(\r\n      ref: Ref<{ [P in indices]: dcim[P][1]['V'][1] }[indices]>,\r\n      ...handlers: derefHandlers<indices, dcim, keys, N, RH, ECtx>\r\n    ) => this.checkTypes<indices, dcim, keys, X, N>(getter(ref), handlers, 0);\r\n  emptyContext = {\r\n    deref: this.deref(this.getter), xderef: this.xderef(this.getter), ref: this.ref, ...this.extra\r\n  };\r\n  /** inserts or updates multiple entries from serialized data with stored subscription to new ones */\r\n  unserialize<\r\n    indices extends number,\r\n    dcim extends Record<indices, [unknown, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: unknown },\r\n    N extends Record<indices, 1 | 2>,\r\n    >(\r\n      getModels: ModelsDefinition<indices, dcim, keys, X, N, RH, ECtx> | ((\r\n        ref: <i extends indices>(i: i) => LocalRef<AppX<'V', dcim[i][1], keys[i], X[i]>>\r\n      ) => ModelsDefinition<indices, dcim, keys, X, N, RH, ECtx>),\r\n  ): { [i in indices]: GlobalRef<AppX<'V', dcim[i][1], keys[i], X[i]>> } & GlobalRef<unknown>[] {\r\n    const session = [] as ObsCache<indices, dcim, keys, X, N, RH, ECtx>;\r\n    const models = getModels instanceof Function ? getModels(<i extends number>(i: i) => ({ $: i } as { $: i, _: any })) : getModels;\r\n    const _push = <i extends indices>(i: i) => {\r\n      const modelsAsObject: { [i in indices]: ModelDefinition<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx> & { i: i } } = models;\r\n      const m: ModelDefinition<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx> & { i: i } = modelsAsObject[i];\r\n      const _models = Object.assign(models, { [i]: m });\r\n      return { ...this._unserialize<indices, dcim, keys, X, N, i>(m.type, ctx, _models, session, i), m };\r\n    }\r\n    const getter = <T extends object, V extends T = T>(r: Ref<T>) => ('id' in r ? this.getValue(r)[0] : _push(r.$ as indices).obs) as ObsWithOrigin<V, RH, ECtx>;\r\n    const ref: ref<RH, ECtx> = this.ref;\r\n    const deref: deref<RH, ECtx> = this.deref(getter);\r\n    const xderef: xderef<RH, ECtx> = this.xderef(getter);\r\n    const ctx = { deref, ref, xderef, ...this.extra };\r\n    const subscriptions: Subscription[] = [];\r\n    const temp: Subscription[] = [];\r\n    try {\r\n      type vcim = { [P in indices]: dcim[P][1]['V'] };\r\n      type vkeys = { [P in indices]: keys[P]['V'] };\r\n      type RefTypeData = { 0: vcim, 1: vkeys, 2: X };\r\n      type Res = TypeFuncs<RefTypeData, indices>[typeof F_Custom_Ref];\r\n      const references: GlobalRefHelper<indices, RefTypeData> = depMap<indices, [\r\n        [never, { i: indices }], [RefTypeData, Res]\r\n      ], [typeof F_I_X, typeof F_Custom_Ref]>(\r\n        models, <i extends indices>({ i }: { i: i }, index: number) => {\r\n          i = index as i;\r\n          const { obs, id, subs, m } = _push(i);\r\n          const isNew = m.new !== false;\r\n          if (isNew && subs !== undefined) throw new Error('Trying to subscribe to an already subscribed entity');\r\n          if (isNew) {\r\n            const attr = this.map.get(id)![1];\r\n            subscriptions.push(attr.subscription = obs.subscribe(() => { }));\r\n            attr.subscription.add(() => attr.subscription = undefined);\r\n          }\r\n          else if (!obs.subject.isStopped) temp.push(obs.subscribe(() => { }));\r\n          const ref = { id } as AppX<'V', dcim[i][1], keys[i], X[i]>;\r\n          return ref as CondRefHelper<RefTypeData, i>;\r\n        });\r\n      temp.forEach(subs => subs.unsubscribe());\r\n      return references;\r\n    } catch (e) {\r\n      temp.concat(subscriptions).forEach(subs => subs.unsubscribe());\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  /** it does nothing useful, there is no use case for this function and no reason for it to stay here */\r\n  append<\r\n    dom, cim extends TVCDA_CIM,\r\n    k extends TVCDADepConstaint<dom, cim>,\r\n    X extends dom,\r\n    n extends 1 | 2,\r\n    >(\r\n      key: KeysOfType<RH, CtxH<dom, cim, k, n, RH, ECtx>> & string,\r\n      entry: EntryObs<AppX<'D', cim, k, X>, AppX<'A', cim, k, X>, n, RH, ECtx>,\r\n      c: AppX<'C', cim, k, X>,\r\n  ) {\r\n    const id = this.getNext();\r\n    const obs = this._insert<0, [[dom, cim]], [k], [X], [n], 0>(key, entry, this.emptyContext, id, c)\r\n    const subs = this.map.get(id)![1].subscription = obs.subscribe(() => { });\r\n    return { id, obs, subs };\r\n  }\r\n\r\n  /** adds an ObsWithOrigin to store and subscribe to it without storing subscription  */\r\n  push<V>(obs: ObsWithOrigin<V, RH, ECtx>,\r\n    { unload, nextId, local: $local }: {\r\n      unload?: (ref: GlobalRef<V>) => void,\r\n      nextId?: (obs: ObsWithOrigin<unknown, RH, ECtx>, parentId?: string) => string | undefined,\r\n      local?: Subscription,\r\n    } = {}\r\n  ): { wrapped: ObsWithOrigin<V, RH, ECtx>, ref: GlobalRef<V>, subscription: Subscription } {\r\n    const old = this.map.finddir(obs);\r\n    const id = this.getNext(old?.[0] ?? this.locals.find(obs, true) ?? this.map.usedId(obs.origin) ?? nextId?.(obs));\r\n    let wrapped = obs;\r\n    let subscription: Subscription;\r\n\r\n    if (old === undefined) {\r\n      let destroyed = false;\r\n      const temp: Subscription[] = [];\r\n      const clear = function (this: Subscription) {\r\n        temp.forEach(this.add.bind(this));\r\n        temp.length = 0;\r\n      }\r\n      const asubj = obs.origin.subject.pipe(\r\n        alternMap(({ args, n }) => {\r\n          const wrap = (obs: ObsWithOrigin<unknown, RH, ECtx>) => {\r\n            const res = this.push(obs, { local: $local, nextId: (nextId && ((obs, pId) => nextId(obs, pId ?? id))) });\r\n            temp.push(res.subscription);\r\n            return res.wrapped;\r\n          };\r\n          const array: (ObsWithOrigin<unknown, RH, ECtx> | Observable<unknown[]>)[] = n === 2\r\n            ? (args as DeepDestructable<unknown[], 2, RH, ECtx>).map(arg => eagerCombineAll(arg.map(wrap)))\r\n            : (args as DeepDestructable<unknown[], 1, RH, ECtx>).map(wrap);\r\n          const ret: Observable<unknown[]> = eagerCombineAll(array);\r\n          return ret;\r\n        }, { completeWithInner: true }),\r\n        tap(clear),\r\n      );\r\n      const teardown = () => {\r\n        unload?.({ id } as GlobalRef<V>);\r\n        const local = this.locals.get(id)?.[1];\r\n        if (!local || local.out) {\r\n          this.pushed.delete(obs);\r\n          this.pushes.next([obs, id, false]);\r\n        }\r\n        clear.call(Subscription.EMPTY);\r\n        this.map.delete(id);\r\n        destroyed = true;\r\n      };\r\n      if ($local?.closed !== false) {\r\n        wrapped = defineProperty(\r\n          Object.assign(eagerCombineAll([obs, asubj]).pipe(\r\n            finalize(teardown),\r\n            map(([v]) => v), shareReplay({ bufferSize: 1, refCount: true }),\r\n          ), { origin: obs.origin, parent: obs }),\r\n          'destroyed', { get() { return destroyed } }\r\n        );\r\n        this.map.set(id, [wrapped, {}]);\r\n        subscription = wrapped.subscribe(()=>{});\r\n      } else {\r\n        $local.add(asubj.subscribe(()=>{}));\r\n        $local.add(teardown);\r\n        this.map.set(id, [wrapped, {}]);\r\n        subscription = wrapped.subscribe(()=>{});\r\n      }\r\n      const local = this.locals.get(id)?.[1];\r\n      if (!local || local.out) {\r\n        this.pushed.set(obs, id);\r\n        this.pushes.next([obs, id, true]);\r\n      }\r\n    } else {\r\n      if (old[1] === 'down') wrapped = this.map.get(id)![0];\r\n      subscription = wrapped.subscribe(()=>{});\r\n    }\r\n    return { ref: { id } as GlobalRef<V>, wrapped, subscription };\r\n  }\r\n\r\n  /**\r\n   * serialize any destructable object regardless wether its in the store\r\n   * @param {Destructable} obs the observable to serialize\r\n   * @param {SerializationOptions} opt options of serialization\r\n   */\r\n  serialize<dom, cim extends TVCDA_CIM, k extends TVCDADepConstaint<dom, cim>, X extends dom, n extends 1 | 2>(\r\n    obs: ObsWithOrigin<AppX<'V', cim, k, X>, RH, ECtx> & { origin: Destructable<dom, cim, k, X, n, RH, ECtx> },\r\n    opt: SerializationOptions\r\n  ) {\r\n    const { isNew, push = true, ignore = [] } = opt;\r\n    type Attr = {\r\n      type: keyof RH & string, value: unknown, data: unknown, new?: boolean,\r\n      resolve?: (x: GlobalRef<unknown>) => void, id?: string, c: unknown,\r\n    };\r\n    type Session = BiMap<RH, ECtx, Attr | null, number>;\r\n    type V = AppX<'V', cim, k, X>;\r\n    type SMRS = [Session, Map<ObsWithOrigin<unknown, RH, ECtx>, { data: unknown }>, Ref<V>, Subscription];\r\n    return obs.pipe(scan<V, SMRS, null>((previous) => {\r\n      const session: Session = new BiMap;\r\n      const allData: SMRS[1] = new Map();\r\n      const subs = new Subscription;\r\n      let next = 1;\r\n      const getter = <T extends object, V extends T = T>(r: Ref<T>) => ('id' in r ? this.map.get(r.id) : session.get(r.$))![0] as ObsWithOrigin<V, RH, ECtx>;\r\n      const inMap = (arg: ObsWithOrigin<unknown, RH, ECtx>) => this.map.find(arg) !== undefined;\r\n      const ref: ref<RH, ECtx> = <V>(iObs: ObsWithOrigin<V, RH, ECtx>): Ref<V> => {\r\n        const origin = iObs.origin, entry = iObs.origin.subject.value;\r\n        const value = current(iObs);\r\n        const id = this.map.find(iObs);\r\n        if (id !== undefined && ignore.indexOf(id) !== -1) return { id } as GlobalRef<V>;\r\n        let oldData: { data: unknown } | undefined = undefined, data: { data: unknown } | undefined;\r\n        if (id !== undefined && previous) {\r\n          const [, old] = previous;\r\n          oldData = old.get(iObs);\r\n        }\r\n        const old = oldData ? { old: oldData.data } : {};\r\n        const encode = () => origin.handler.encode(ctx)({ ...entry, c: origin.c, ...old });\r\n        if (oldData) { //if (isHere)\r\n          data = { data: encode() };\r\n          if (data.data === undefined && id !== undefined) {\r\n            allData.set(iObs, oldData);\r\n            return { id } as GlobalRef<V>;\r\n          }\r\n        }\r\n        const i = session.find(iObs);\r\n        const $ = i ?? (iObs === obs ? 0 : next++);\r\n        if (i === undefined) {\r\n          if (!data) {\r\n            session.set($, [iObs, null]);\r\n            data = { data: encode() };\r\n          }\r\n          allData.set(iObs, data);\r\n          let usedId = id;\r\n          if (usedId === undefined) {\r\n            if (push) {\r\n              const { subscription, ref } = this.push(iObs);\r\n              subs.add(subscription);\r\n              usedId = ref.id;\r\n            } else {\r\n              usedId = this.map.usedId(iObs);\r\n            }\r\n          }\r\n          const attr: Attr = { type: origin.key, value, ...data, c: origin.c, id: usedId };\r\n          attr.new = $ === 0 && previous === null && (isNew || !inMap(iObs));\r\n          const stored = session.get($);\r\n          if (stored) stored[1] = attr;\r\n          else session.set($, [iObs, attr]);\r\n        }\r\n        return { $ } as LocalRef<V>;\r\n      };\r\n      const ctx = {\r\n        deref: this.deref(getter), xderef: this.xderef(getter), ref, ...this.extra\r\n      };\r\n      const ret: SMRS = [session, allData, ref(obs), subs];\r\n      previous?.[3].unsubscribe();\r\n      return ret;\r\n    }, null), map(function (this: Subscription, [session, , ref, subs]) {\r\n      this.add(subs);\r\n      const entries = Array(session.size).fill(0).map((_, i) => session.get(i)!);\r\n      if (entries.length === 0) {\r\n        if ('$' in ref) throw new Error('Unexpected');\r\n        return null;\r\n      }\r\n      return entries.map(([, definition], i) => {\r\n        const def = { i, ...definition! }\r\n        delete def.value;\r\n        return def;\r\n      }) as AnyModelDefinition<RH, ECtx, 0>[] as EModelsDefinition<0, [[dom, cim]], [k], [X], [n], RH, ECtx>\r\n    }), filter((x): x is NonNullable<typeof x> => x !== null));\r\n  }\r\n  get(id: string) {\r\n    return this.map.get(id);\r\n  }\r\n  getValue<V>({ id }: GlobalRef<V>) {\r\n    const obs = this.get(id);\r\n    if (obs === undefined) throw new Error('Access to destroyed object');\r\n    return obs as [ObsWithOrigin<V, RH, ECtx>, (typeof obs)[1]];\r\n  }\r\n\r\n  /* #region  local method signatures */\r\n  call<fId extends fIds>(\r\n    fId: fId, param: fdcp[fId][2],\r\n    arg: GlobalRef<AppX<'V', fdcp[fId][0][1], fkx[fId][0], fkx[fId][1]>>,\r\n    opt?: { ignore?: string[], graph: true },\r\n  ): Observable<EModelsDefinition<0, [[fdcp[fId][1][0], fdcp[fId][1][1]]], [fkx[fId][2]], [fkx[fId][3]], [fdcp[fId][1][2]], RH, ECtx>>;\r\n  call<fId extends fIds>(\r\n    fId: fId, param: fdcp[fId][2],\r\n    arg: GlobalRef<AppX<'V', fdcp[fId][0][1], fkx[fId][0], fkx[fId][1]>>,\r\n    opt: { ignore?: string[], graph?: false },\r\n  ): Observable<GlobalRef<AppX<'V', fdcp[fId][1][1], fkx[fId][2], fkx[fId][3]>>>;\r\n  /* #endregion */\r\n\r\n  call<fId extends fIds>(\r\n    fId: fId, param: fdcp[fId][2],\r\n    arg: GlobalRef<AppX<'V', fdcp[fId][0][1], fkx[fId][0], fkx[fId][1]>>,\r\n    opt: { ignore?: string[], graph?: boolean } = {},\r\n  ) {\r\n    if (this.functions === null) throw new Error('Cannot call local functions from remote store');\r\n    const f = this.functions[fId];\r\n    const subs = new Subscription();\r\n    const obs = f(param, this.getValue(arg)[0], subs);\r\n    if (opt.graph) return new Observable<EModelsDefinition<0, [[fdcp[fId][1][0], fdcp[fId][1][1]]], [fkx[fId][2]], [fkx[fId][3]], [fdcp[fId][1][2]], RH, ECtx>>(subscriber => {\r\n      obs.then(obs => {\r\n        const { subscription } = this.push(obs);\r\n        subs.unsubscribe();\r\n        const serialized = this.serialize(obs.origin, { isNew: true, ignore: opt.ignore });\r\n        subscriber.add(serialized.subscribe(subscriber));\r\n        subscriber.add(subscription);\r\n      })\r\n    });\r\n    return new Observable<GlobalRef<AppX<'V', fdcp[fId][1][1], fkx[fId][2], fkx[fId][3]>>>(subscriber => {\r\n      obs.then(obs => {\r\n        const { subscription, ref } = this.push(obs);\r\n        subs.unsubscribe();\r\n        subscriber.next(ref);\r\n        subscriber.add(subscription);\r\n      })\r\n    });\r\n  }\r\n\r\n  callReturnRef = new WeakMap<Subscription, PromiseLike<GlobalRef<unknown>>>();\r\n\r\n  /* #region remote */\r\n  remote<fId extends fIds>(\r\n    fId: fId,\r\n    arg: ObsWithOrigin<AppX<'V', fdcp[fId][0][1], fkx[fId][0], fkx[fId][1]>, RH, ECtx> & {\r\n      origin: Destructable<fdcp[fId][0][0], fdcp[fId][0][1], fkx[fId][0], fkx[fId][1], fdcp[fId][0][2], RH, ECtx>\r\n    },\r\n    param: fdcp[fId][2],\r\n    { handlers: makeOp, serialized }: CallHandler<RH, ECtx, fIds, fdcp, fkx>,\r\n    opt: { ignore?: string[], graph: true },\r\n  ): Observable<AppX<'V', fdcp[fId][1][1], fkx[fId][2], fkx[fId][3]>>;\r\n  remote<fId extends fIds>(\r\n    fId: fId,\r\n    arg: ObsWithOrigin<AppX<'V', fdcp[fId][0][1], fkx[fId][0], fkx[fId][1]>, RH, ECtx> & {\r\n      origin: Destructable<fdcp[fId][0][0], fdcp[fId][0][1], fkx[fId][0], fkx[fId][1], fdcp[fId][0][2], RH, ECtx>\r\n    },\r\n    param: fdcp[fId][2],\r\n    { handlers: makeOp, serialized }: CallHandler<RH, ECtx, fIds, fdcp, fkx>,\r\n    opt?: { ignore?: string[], graph?: false },\r\n  ): Observable<GlobalRef<AppX<'V', fdcp[fId][1][1], fkx[fId][2], fkx[fId][3]>>>;\r\n  /* #endregion */\r\n\r\n  remote<fId extends fIds>(\r\n    fId: fId,\r\n    arg: ObsWithOrigin<AppX<'V', fdcp[fId][0][1], fkx[fId][0], fkx[fId][1]>, RH, ECtx> & {\r\n      origin: Destructable<fdcp[fId][0][0], fdcp[fId][0][1], fkx[fId][0], fkx[fId][1], fdcp[fId][0][2], RH, ECtx>\r\n    },\r\n    param: fdcp[fId][2],\r\n    { handlers: makeOp, serialized }: CallHandler<RH, ECtx, fIds, fdcp, fkx>,\r\n    opt: { ignore?: string[], graph?: boolean } = {},\r\n  ) {\r\n    type V = AppX<'V', fdcp[fId][0][1], fkx[fId][0], fkx[fId][1]>;\r\n    type V2 = AppX<'V', fdcp[fId][1][1], fkx[fId][2], fkx[fId][3]>;\r\n    return new Observable<V2 | GlobalRef<V2>>(subscriber => {\r\n      const op = makeOp<fId>();\r\n      const { subscription: argSubscription, ref: refArg } = this.push(arg, opt.graph ? {\r\n        unload: (ref) => op.unsubscribe(ref),\r\n      } : {});\r\n      const callSubscription = new Subscription();\r\n      const makePromise = <T>(res?: (x: T) => void) => [new this.promiseCtr<T>(r => res = r), res!] as const;\r\n      const refTask = makePromise<GlobalRef<V2>>();\r\n      if (opt.graph) {\r\n        let serializeObs = serialized.get(arg);\r\n        if (!serializeObs) serialized.set(arg, serializeObs = this.serialize(arg, {\r\n          isNew: true\r\n        }).pipe(asyncMap((def) => {\r\n          const refsPromise = op.put(def);\r\n          return refsPromise.then((refs): Cancellable<GlobalRef<V>> => ({ ok: true, value: refs[0] }));\r\n        }), tap({\r\n          error: e => op.error(refArg, e),\r\n          complete: () => op.complete(refArg),\r\n        }), shareReplay({ refCount: true, bufferSize: 1 })));\r\n        const paramSubs = serializeObs.subscribe(()=>{});\r\n        this.callReturnRef.set(subscriber, refTask[0]);\r\n        callSubscription.add(() => {\r\n          if (paramSubs.closed) return;\r\n          paramSubs.unsubscribe();\r\n        });\r\n        if (paramSubs.closed) {\r\n          callSubscription.unsubscribe();\r\n          return;\r\n        }\r\n      }\r\n      callSubscription.add(argSubscription);\r\n      const responseSubs = op.subscribeToResult({\r\n        resp_id: (ref) => {\r\n          responseSubs.add(this.getValue(ref)[0].pipe(\r\n            filter((_, index) => index === 0),\r\n            mapTo(ref),\r\n          ).subscribe(subscriber));\r\n          refTask[1](ref);\r\n        },\r\n        resp_call: (data) => {\r\n          const ref = this.unserialize(data)[0];\r\n          responseSubs.add(this.get(ref.id)?.[1].subscription);\r\n          refTask[1](ref);\r\n        },\r\n        err_call: (err) => refTask[0].then(ref => {\r\n          const obs = this.getValue(ref)[0];\r\n          (obs as typeof obs.origin).subject.error(err);\r\n        }),\r\n        comp_call: () => refTask[0].then(ref => {\r\n          const obs = this.getValue(ref)[0];\r\n          (obs as typeof obs.origin).subject.complete();\r\n        })\r\n      });\r\n      callSubscription.add(() => {\r\n        if (!responseSubs.closed) op.end_call()\r\n      });\r\n      callSubscription.add(responseSubs);\r\n      responseSubs.add(callSubscription);\r\n      op.call(fId, param, refArg, opt);\r\n      if (opt.graph) refTask[0].then(refReturn => {\r\n        const subs2 = this.getValue(refReturn)[0].subscribe(subscriber);\r\n        callSubscription.add(() => subs2.unsubscribe());\r\n      })\r\n      subscriber.add(callSubscription);\r\n    });\r\n  }\r\n}\r\n","type InferValue<Prop extends PropertyKey, Desc> =\r\n  Desc extends { get(): any, value: any } ? never :\r\n  Desc extends { value: infer T } ? Record<Prop, T> :\r\n  Desc extends { get(): infer T } ? Record<Prop, T> : never;\r\n\r\ntype DefineProperty<\r\n  Prop extends PropertyKey,\r\n  Desc extends PropertyDescriptor> =\r\n  Desc extends { writable: any, set(val: any): any } ? never :\r\n  Desc extends { writable: any, get(): any } ? never :\r\n  Desc extends { writable: false } ? Readonly<InferValue<Prop, Desc>> :\r\n  Desc extends { writable: true } ? InferValue<Prop, Desc> :\r\n  Readonly<InferValue<Prop, Desc>>\r\n\r\nexport function defineProperty<\r\n  Obj extends object,\r\n  Key extends PropertyKey,\r\n  PDesc extends PropertyDescriptor>\r\n  (obj: Obj, prop: Key, val: PDesc): Obj & DefineProperty<Key, PDesc> {\r\n  return Object.defineProperty(obj, prop, val);\r\n}\r\n","import { App, KeysOfType } from 'dependent-type';\r\n\r\nexport const toCond = <S, X extends S, K, E = never>(x: K) => x as X extends S ? K : E;\r\nexport const asCond = <A, B, R>(x: A & R) => x as A extends B ? A : R as A extends B ? B : R;\r\nexport const byKey = <T, R>(o: T, k: KeysOfType<T, R>): R => o[k] as any;\r\nexport const subKey = <A, B extends A, T, K = unknown>(k: K & KeysOfType<T, B>): K & KeysOfType<T, A> => k as any;\r\nexport const toSuperKey = <A, V, k extends KeysOfType<A, V>>(o: A[k]): V => o as any;\r\n","export { defineProperty } from './global';\r\nexport * as guards from './guards';\r\nexport { QuickPromise } from './quick-promise';\r\nexport * as rx_utils from './rx-utils';\r\n","const identity = <T>(v: T) => v;\r\n\r\nenum PromiseStatus { Pending, Resolved, Rejected, Alias }\r\n\r\nexport class QuickPromise<T> implements PromiseLike<T> {\r\n  private _thens: ((x: T) => void)[] = [];\r\n  private _catchs: ((e: any) => void)[] = [];\r\n  private _value?: T;\r\n  private _error?: any;\r\n  private _promise?: PromiseLike<T>;\r\n  private _status = PromiseStatus.Pending;\r\n\r\n  private _finilize<U>(list: ((x: U) => void)[]) {\r\n    return (value: U) => {\r\n      list.forEach(h => h(value));\r\n      this._thens = [];\r\n      this._catchs = [];\r\n    };\r\n  }\r\n\r\n  constructor(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) {\r\n    executor(valueOrPromise => {\r\n      if (this._status !== PromiseStatus.Pending) return;\r\n      if (((v: any): v is PromiseLike<T> => v?.then)(valueOrPromise)) {\r\n        this._status = PromiseStatus.Alias;\r\n        this._promise = valueOrPromise;\r\n        valueOrPromise.then(this._finilize(this._thens), this._finilize(this._catchs));\r\n      } else {\r\n        const value: T = valueOrPromise!;\r\n        this._value = value;\r\n        this._status = PromiseStatus.Resolved;\r\n        this._finilize(this._thens)(value);\r\n      }\r\n    }, e => {\r\n      if (this._status !== PromiseStatus.Pending) return;\r\n      this._error = e;\r\n      this._status = PromiseStatus.Rejected;\r\n      this._finilize(this._catchs)(e);\r\n    });\r\n  }\r\n\r\n  private _tryRun<R>(\r\n    handler: (value: T) => R | PromiseLike<R>,\r\n    resolve: (value: R | PromiseLike<R>) => void,\r\n    reject: (reason?: any) => void,\r\n  ): (x: T) => void {\r\n    return (x: T) => {\r\n      try {\r\n        const valueOrPromise = handler(x);\r\n        if (((v: any): v is PromiseLike<R> => v?.then)(valueOrPromise)) {\r\n          valueOrPromise.then(resolve, reject);\r\n        } else {\r\n          const value: R = valueOrPromise;\r\n          resolve(value);\r\n        }\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    };\r\n  }\r\n  then<R = T, E = never>(\r\n    onfulfilled?: ((value: T) => R | PromiseLike<R>) | null,\r\n    onrejected?: ((reason: any) => E | PromiseLike<E>) | null\r\n  ): PromiseLike<R | E> {\r\n    const onfulfilled2 = onfulfilled ?? identity as unknown as (value: T) => R;\r\n    return new QuickPromise<R | E>((res, rej) => {\r\n      if (this._status === PromiseStatus.Pending) {\r\n        this._thens.push(this._tryRun(onfulfilled2, res, rej));\r\n        if (onrejected) this._catchs.push(this._tryRun(onrejected, res, rej));\r\n        else this._catchs.push(rej);\r\n      } else if (this._status === PromiseStatus.Alias) {\r\n        const promise = this._promise!;\r\n        promise.then(\r\n          this._tryRun(onfulfilled2, res, rej),\r\n          onrejected ? this._tryRun(onrejected, res, rej) : rej,\r\n        );\r\n      } else if (this._status === PromiseStatus.Resolved) {\r\n        this._tryRun(onfulfilled2, res, rej)(this._value!);\r\n      } else {\r\n        if (onrejected) this._tryRun(onrejected, res, rej)(this._error!);\r\n        else rej(this._error!);\r\n      }\r\n    });\r\n  }\r\n  catch<E = never>(\r\n    onrejected?: ((reason: any) => E | PromiseLike<E>) | null\r\n  ): PromiseLike<E> {\r\n    return this.then(null, onrejected);\r\n  }\r\n  [Symbol.toStringTag]: '';\r\n  finally(\r\n    onfinally?: (() => void) | null\r\n  ): PromiseLike<T> {\r\n    if (!onfinally) return this;\r\n    const handler = () => { try { onfinally(); } catch (_e) { } };\r\n    if (this._status === PromiseStatus.Alias) this._promise!.then(handler, handler);\r\n    else if (this._status === PromiseStatus.Pending) this._thens.push(handler), this._catchs.push(handler);\r\n    else handler();\r\n    return this;\r\n  }\r\n  static resolve<T>(v: T | PromiseLike<T>): QuickPromise<T>;\r\n  static resolve<T>(v?: T | PromiseLike<T> | undefined): QuickPromise<T | undefined>;\r\n  static resolve<T>(v: T | PromiseLike<T>) {\r\n    return new QuickPromise<T>(res => res(v));\r\n  }\r\n\r\n  static reject(e: any) {\r\n    return new QuickPromise<never>((_, rej) => rej(e));\r\n  }\r\n\r\n  static all<T>(values: readonly (T | PromiseLike<T>)[]): PromiseLike<T[]>;\r\n  static all<O>(values: O): PromiseLike<UnPromise<O>>;\r\n  static all<O>(p: O): PromiseLike<UnPromise<O>> {\r\n    const result = (p instanceof Array ? [...p] : { ...p }) as UnPromise<O>;\r\n    const keys = (Object.keys(p) as (keyof O)[]).filter(k => (p[k] as any).then);\r\n    let count = keys.length;\r\n    return new QuickPromise<UnPromise<O>>((res, rej) => {\r\n      if (!count) res(result);\r\n      keys.forEach(<k extends keyof O>(k: k) => {\r\n        const promise = (p[k] as any as PromiseLike<O[k] extends PromiseLike<infer T> ? T : never>);\r\n        promise.then<void, void>(x => {\r\n          result[k] = x;\r\n          if (!--count) res(result);\r\n        }, rej);\r\n      });\r\n    });\r\n  }\r\n}\r\ntype UnPromise<O> = {\r\n  [k in keyof O]: O[k] extends PromiseLike<infer T> ? T : O[k]\r\n};","import { combineLatest, of, TeardownLogic, Subscriber, Observable, Subscription, OperatorFunction, concat, NEVER } from 'rxjs';\r\nimport type { CombineLatestSubscriber } from 'rxjs/internal/observable/combineLatest';\r\nimport { CombineLatestOperator } from 'rxjs/internal/observable/combineLatest';\r\n\r\ndeclare module 'rxjs/operators' {\r\n  export function scan<T, R, V>(accumulator: (acc: R | V, value: T, index: number) => R, seed: V): OperatorFunction<T, R>;\r\n}\r\n\r\nclass CompleteDestination<T> extends Subscriber<T> {\r\n  notifyComplete() { this.destination.complete?.(); }\r\n}\r\n\r\n/** Like combineLatest but emits if the array of observables is empty \r\n * and completes when and only when one observable completes */\r\nexport const eagerCombineAll: typeof combineLatest = function (this: any, ...args: any[]) {\r\n  if (args.length === 0 || args.length === 1 && args[0] instanceof Array && args[0].length === 0) return concat(of([]), NEVER);\r\n  const obs = combineLatest.apply(this, args);\r\n  (obs.operator as CombineLatestOperator<any, any>).call = function (sink, source) {\r\n    const subscriber: CombineLatestSubscriber<any, any> = CombineLatestOperator.prototype.call(sink, source);\r\n    subscriber.notifyComplete = CompleteDestination.prototype.notifyComplete;\r\n  }\r\n  return obs;\r\n} as any;\r\n\r\nexport const on = <T>({ complete, error, next, subscribe, teardown }: {\r\n  complete?: () => void, error?: (e: any) => void, next?: (v: T) => void, subscribe?: () => void, teardown?: TeardownLogic\r\n}) => (source: Observable<T>) => source.lift<T>(function (this: Subscriber<T>, source: Observable<T>) {\r\n  const subscriber = this;\r\n  subscribe?.();\r\n  const subscription = new Subscription();\r\n  subscription.add(source.subscribe(v => {\r\n    next?.(v);\r\n    subscriber.next(v)\r\n  }, e => {\r\n    error?.(e);\r\n    subscriber.error(e)\r\n  }, () => {\r\n    complete?.();\r\n    subscriber.complete();\r\n  }));\r\n  subscription.add(teardown);\r\n  return subscription;\r\n});\r\n\r\nexport function current<T>(obs: Observable<T>, value: T): T;\r\nexport function current<T>(obs: Observable<T | undefined>, value?: T | undefined): T | undefined;\r\nexport function current<T>(obs: Observable<T>, value: T) {\r\n  obs.subscribe(v => value = v).unsubscribe();\r\n  return value;\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_internal_InnerSubscriber__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_internal_OuterSubscriber__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_internal_observable_combineLatest__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_internal_util_subscribeToResult__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_operators__;"],"sourceRoot":""}