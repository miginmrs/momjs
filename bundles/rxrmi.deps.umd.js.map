{"version":3,"sources":["webpack://rxrmi/webpack/universalModuleDefinition","webpack://rxrmi/webpack/bootstrap","webpack://rxrmi/./node_modules/altern-map/dist/esm/altern-map.js","webpack://rxrmi/./node_modules/altern-map/dist/esm/index.js","webpack://rxrmi/./node_modules/deep-is/index.js","webpack://rxrmi/./node_modules/dependent-type/source/index.ts","webpack://rxrmi/./node_modules/dependent-type/source/map.ts","webpack://rxrmi/./node_modules/rx-async/dist/esm/async-map.js","webpack://rxrmi/./node_modules/rx-async/dist/esm/index.js","webpack://rxrmi/./node_modules/rx-async/dist/esm/linked-list.js","webpack://rxrmi/./source/destructable.ts","webpack://rxrmi/./source/handlers.ts","webpack://rxrmi/./source/index.ts","webpack://rxrmi/./source/proxy.ts","webpack://rxrmi/./source/store.ts","webpack://rxrmi/./utils/global.ts","webpack://rxrmi/./utils/guards.ts","webpack://rxrmi/./utils/index.ts","webpack://rxrmi/./utils/quick-promise.ts","webpack://rxrmi/./utils/rx-utils.ts","webpack://rxrmi/external {\"root\":[\"rxjs\"],\"commonjs\":\"rxjs\",\"commonjs2\":\"rxjs\",\"amd\":\"rxjs\"}","webpack://rxrmi/external {\"root\":[\"rxjs\",\"internal\",\"InnerSubscriber\"],\"commonjs\":\"rxjs/internal/InnerSubscriber\",\"commonjs2\":\"rxjs/internal/InnerSubscriber\",\"amd\":\"rxjs/internal/InnerSubscriber\"}","webpack://rxrmi/external {\"root\":[\"rxjs\",\"internal\",\"OuterSubscriber\"],\"commonjs\":\"rxjs/internal/OuterSubscriber\",\"commonjs2\":\"rxjs/internal/OuterSubscriber\",\"amd\":\"rxjs/internal/OuterSubscriber\"}","webpack://rxrmi/external {\"root\":[\"rxjs\",\"internal\",\"observable\",\"combineLatest\"],\"commonjs\":\"rxjs/internal/observable/combineLatest\",\"commonjs2\":\"rxjs/internal/observable/combineLatest\",\"amd\":\"rxjs/internal/observable/combineLatest\"}","webpack://rxrmi/external {\"root\":[\"rxjs\",\"internal\",\"util\",\"subscribeToResult\"],\"commonjs\":\"rxjs/internal/util/subscribeToResult\",\"commonjs2\":\"rxjs/internal/util/subscribeToResult\",\"amd\":\"rxjs/internal/util/subscribeToResult\"}","webpack://rxrmi/external {\"root\":[\"rxjs\",\"operators\"],\"commonjs\":\"rxjs/operators\",\"commonjs2\":\"rxjs/operators\",\"amd\":\"rxjs/operators\"}"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACS;AAC2B;AACA;AACS;AAClE;AACP;AACA,2DAA2D,iDAAI,qBAAqB,0DAAG;AACvF;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6EAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6EAAe;AACnD;AACA;AACA,iCAAiC,8FAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;AC1EA;AAAA;AAAA;AAAA;AAA6B;AAC7B,iC;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAC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","file":"rxrmi.deps.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rxjs\"), require(\"rxjs/internal/InnerSubscriber\"), require(\"rxjs/internal/OuterSubscriber\"), require(\"rxjs/internal/observable/combineLatest\"), require(\"rxjs/internal/util/subscribeToResult\"), require(\"rxjs/operators\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"rxjs\", \"rxjs/internal/InnerSubscriber\", \"rxjs/internal/OuterSubscriber\", \"rxjs/internal/observable/combineLatest\", \"rxjs/internal/util/subscribeToResult\", \"rxjs/operators\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rxrmi\"] = factory(require(\"rxjs\"), require(\"rxjs/internal/InnerSubscriber\"), require(\"rxjs/internal/OuterSubscriber\"), require(\"rxjs/internal/observable/combineLatest\"), require(\"rxjs/internal/util/subscribeToResult\"), require(\"rxjs/operators\"));\n\telse\n\t\troot[\"rxrmi\"] = factory(root[\"rxjs\"], root[\"rxjs\"][\"internal\"][\"InnerSubscriber\"], root[\"rxjs\"][\"internal\"][\"OuterSubscriber\"], root[\"rxjs\"][\"internal\"][\"observable\"][\"combineLatest\"], root[\"rxjs\"][\"internal\"][\"util\"][\"subscribeToResult\"], root[\"rxjs\"][\"operators\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE_rxjs__, __WEBPACK_EXTERNAL_MODULE_rxjs_internal_InnerSubscriber__, __WEBPACK_EXTERNAL_MODULE_rxjs_internal_OuterSubscriber__, __WEBPACK_EXTERNAL_MODULE_rxjs_internal_observable_combineLatest__, __WEBPACK_EXTERNAL_MODULE_rxjs_internal_util_subscribeToResult__, __WEBPACK_EXTERNAL_MODULE_rxjs_operators__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./source/index.ts\");\n","import { from } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { OuterSubscriber } from \"rxjs/internal/OuterSubscriber\";\nimport { InnerSubscriber } from \"rxjs/internal/InnerSubscriber\";\nimport { subscribeToResult } from \"rxjs/internal/util/subscribeToResult\";\nexport function alternMap(project, options, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return (source) => source.pipe(alternMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii))), options));\n    }\n    return (source) => source.lift(new AlternMapOperator(project, options || {}));\n}\nclass AlternMapOperator {\n    constructor(project, options) {\n        this.project = project;\n        this.options = options;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new AlternMapSubscriber(subscriber, this.project, this.options));\n    }\n}\nclass AlternMapSubscriber extends OuterSubscriber {\n    constructor(destination, project, options) {\n        super(destination);\n        this.project = project;\n        this.options = options;\n        this.index = 0;\n    }\n    _next(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    }\n    _innerSub(result, value, index) {\n        const innerSubscription = this.innerSubscription;\n        const innerSubscriber = new InnerSubscriber(this, value, index);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n        if (this.innerSubscription !== innerSubscriber) {\n            destination.add(this.innerSubscription);\n        }\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n    }\n    _complete() {\n        const { innerSubscription } = this;\n        if (!innerSubscription || innerSubscription.closed || this.options.completeWithSource) {\n            super._complete();\n        }\n        this.unsubscribe();\n    }\n    _unsubscribe() {\n        this.innerSubscription = null;\n    }\n    notifyComplete(innerSub) {\n        const destination = this.destination;\n        destination.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped || this.options.completeWithInner) {\n            super._complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    }\n}\n//# sourceMappingURL=altern-map.js.map","export * from './altern-map';\n//# sourceMappingURL=index.js.map","var pSlice = Array.prototype.slice;\nvar Object_keys = typeof Object.keys === 'function'\n    ? Object.keys\n    : function (obj) {\n        var keys = [];\n        for (var key in obj) keys.push(key);\n        return keys;\n    }\n;\n\nvar deepEqual = module.exports = function (actual, expected) {\n  // enforce Object.is +0 !== -0\n  if (actual === 0 && expected === 0) {\n    return areZerosEqual(actual, expected);\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  } else if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  } else if (isNumberNaN(actual)) {\n    return isNumberNaN(expected);\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (typeof actual != 'object' && typeof expected != 'object') {\n    return actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction isNumberNaN(value) {\n  // NaN === NaN -> false\n  return typeof value == 'number' && value !== value;\n}\n\nfunction areZerosEqual(zeroA, zeroB) {\n  // (1 / +0|0) -> Infinity, but (1 / -0) -> -Infinity and (Infinity !== -Infinity)\n  return (1 / zeroA) === (1 / zeroB);\n}\n\nfunction objEquiv(a, b) {\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b);\n  }\n  try {\n    var ka = Object_keys(a),\n        kb = Object_keys(b),\n        key, i;\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key])) return false;\n  }\n  return true;\n}\n","export * as map from './map';\nexport type {\n  BadApp, App, AppX, BAD_APP_MARKER, DepConstaint, DependentType, FromEntries,\n  Fun, Invariant, KeysOfType, KeysOfTypeObj, TypeFuncs, keytype\n} from './types.d';\n","import { keytype, DepConstaint, AppX } from './types';\n\nexport const conf: {\n  Promise: {\n    all<T>(values: readonly (T | PromiseLike<T>)[]): PromiseLike<T[]>,\n    resolve<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n  }\n} = { Promise }\n\ntype Pair = 0 | 1;\nexport const depMap = <dom extends keytype, cim extends Record<Pair, [any, any]>, k extends DepConstaint<Pair, dom, cim>>(arr: cim[0][1][], p: <X extends dom>(a: AppX<0, cim, k, X>, i: number) => AppX<1, cim, k, X>) => {\n  const r: cim[1][1][] = [];\n  arr.forEach((v, i) => r[i] = p(v, i));\n  return r as cim[1][1][] & { [X in dom]: AppX<1, cim, k, X> };\n};\n\n\nexport const asyncDepMap = <dom extends keytype, cim extends Record<Pair, [any, any]>, k extends DepConstaint<Pair, dom, cim>>(\n  arr: cim[0][1][],\n  p: <X extends dom>(a: AppX<0, cim, k, X>, i: number) => AppX<1, cim, k, X> | PromiseLike<AppX<1, cim, k, X>>,\n  Promise = conf.Promise,\n) => {\n  const r: cim[1][1][] = [];\n  return Promise.all(arr.map((v, i) => Promise.resolve(p(v, i)).then(x => r[i] = x))).then(() => r as cim[1][1][] & { [X in dom]: AppX<1, cim, k, X> });\n};\n","import { from, noop, Observable, Subscription } from 'rxjs';\nimport { List } from './linked-list';\nexport const iterate = async (it, getPauser, onCancel) => {\n    let cancelled = false, v = await it.next();\n    if (onCancel)\n        onCancel(() => {\n            cancelled = true;\n            it.next(true).catch(noop);\n        });\n    while (!cancelled && !v.done) {\n        const pauser = getPauser && getPauser();\n        if (pauser)\n            await pauser;\n        else\n            v = await it.next(false);\n    }\n    return !cancelled && v.done ? { ok: true, value: v.value } : {};\n};\nexport const asyncMap = (map, { handleException, wait = false, mode = 'concurrent' } = {}) => (source) => new Observable(subscriber => {\n    let lift = Subscription.EMPTY;\n    const merge = mode === 'merge', continuous = mode === 'recent';\n    const list = new List(), pause = !merge && !continuous, switchMode = mode === 'switch';\n    const promiseMap = new WeakMap(), resolveMap = new WeakMap();\n    const sourceSubscription = source.subscribe({\n        next: v => {\n            const prev = lift, actual = lift = new Subscription(), node = list.unshift();\n            promiseMap.set(node, new Promise(r => resolveMap.set(node, r)));\n            actual.add(() => list.remove(node));\n            const promise = map(v, node, { get closed() { return actual.closed; } }, () => pause && node.next ? promiseMap.get(node.next) : undefined, cb => actual.add(cb)).then(undefined, e => ({ ok: false, error: e }));\n            actual.add(from(promise).subscribe(({ ok, value, error }) => {\n                if (!ok) {\n                    if (error && handleException) {\n                        const cancellable = handleException(error);\n                        if (cancellable.ok)\n                            subscriber.next(cancellable.value);\n                    }\n                    list.remove(node);\n                    resolveMap.get(node)();\n                    return prev.add(actual);\n                }\n                subscriber.next(value);\n                if (merge)\n                    prev.add(actual);\n                else\n                    actual.unsubscribe();\n            }));\n            if (switchMode)\n                return prev.unsubscribe();\n            else\n                actual.add(prev);\n        },\n        error: e => subscriber.error(e),\n        complete: () => lift.add(() => subscriber.complete())\n    });\n    const subs = wait ? new Subscription() : sourceSubscription;\n    if (wait)\n        subs.add(sourceSubscription);\n    subs.add(() => lift.unsubscribe());\n    return subs;\n});\nexport const iterateMap = (map, config = { mode: 'concurrent' }) => asyncMap((value, node, status, getPause, onCancel) => iterate(map(value, node, status), getPause, onCancel), config);\n//# sourceMappingURL=async-map.js.map","export * from './async-map';\n//# sourceMappingURL=index.js.map",";\nexport class List {\n    *iterator(node = this.head) {\n        while (node) {\n            yield node;\n            node = node.next;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    unshift(value) {\n        const next = this.head;\n        const node = this.head = { value, next, list: this };\n        if (next)\n            next.prev = this.head;\n        if (!this.tail)\n            this.tail = this.head;\n        return node;\n    }\n    remove(node) {\n        if (this.head === node)\n            this.head = node.next;\n        if (this.tail === node)\n            this.tail = node.prev;\n        if (node.next) {\n            node.next.prev = node.prev;\n            node.next = undefined;\n        }\n        if (node.prev) {\n            node.prev.next = node.next;\n            node.prev = undefined;\n        }\n    }\n}\n//# sourceMappingURL=linked-list.js.map","import { BehaviorSubject, Observable, Subscription, TeardownLogic } from 'rxjs';\r\nimport { alternMap } from 'altern-map';\r\nimport { eagerCombineAll } from '../utils/rx-utils';\r\nimport { map, shareReplay, distinctUntilChanged, scan, tap } from 'rxjs/operators';\r\nimport { TVCDA_CIM, TVCDADepConstaint, EHConstraint, CtxEH, RequestHandlerCompare, ObsWithOrigin } from './types';\r\nimport type { AppX, KeysOfType } from 'dependent-type';\r\nimport { byKey } from '../utils/guards';\r\nimport '../utils/rx-utils'\r\n\r\nexport type TwoDestructable<A extends any[], EH extends EHConstraint<EH, ECtx>, ECtx> = TypedDestructable<A[Exclude<keyof A, keyof any[]>], EH, ECtx>[] & {\r\n  [k in Exclude<keyof A, keyof any[]>]: TypedDestructable<A[k], EH, ECtx>;\r\n};\r\nexport type DeepDestructable<A extends any[], n extends 1 | 2, EH extends EHConstraint<EH, ECtx>, ECtx> = (n extends 1 ? TypedDestructable<A[Exclude<keyof A, keyof any[]>], EH, ECtx> : TwoDestructable<A[Exclude<keyof A, keyof any[]>] & unknown[], EH, ECtx>)[] & {\r\n  [k in Exclude<keyof A, keyof any[]>]: n extends 1 ? TypedDestructable<A[k], EH, ECtx> : TwoDestructable<A[k] & unknown[], EH, ECtx>;\r\n};\r\nexport type EntryObs<D, A extends any[], n extends 1 | 2, EH extends EHConstraint<EH, ECtx>, ECtx> = {\r\n  args: DeepDestructable<A, n, EH, ECtx>, data: D, n: n\r\n};\r\n\r\nexport const destructableCmp = <dom, cim extends TVCDA_CIM, k extends TVCDADepConstaint<dom, cim>, n extends 1 | 2, EH extends EHConstraint<EH, ECtx>, ECtx>({\r\n  compareData = <X extends dom>(x: AppX<'D', cim, k, X>, y: AppX<'D', cim, k, X>) => x === y,\r\n  compareObs = <X extends dom, i extends number>(x: TypedDestructable<AppX<'A', cim, k, X>[i], EH, ECtx>, y: TypedDestructable<AppX<'A', cim, k, X>[i], EH, ECtx>) => x === y\r\n} = {}): RequestHandlerCompare<dom, cim, k, n, EH, ECtx> => <X extends dom>(\r\n  x: EntryObs<AppX<'D', cim, k, X>, AppX<'A', cim, k, X>, n, EH, ECtx>, y: EntryObs<AppX<'D', cim, k, X>, AppX<'A', cim, k, X>, n, EH, ECtx>\r\n) => x.args.length === y.args.length && x.args.every((v, i) => {\r\n  type item = TypedDestructable<any, EH, ECtx> | TwoDestructable<any, EH, ECtx>;\r\n  const vItem: item = v, yItem: item = y.args[i];\r\n  if (vItem instanceof Array) {\r\n    if (yItem instanceof Array) return vItem.length === yItem.length && vItem.every((x, i) => x === yItem[i]);\r\n    return false;\r\n  }\r\n  if (yItem instanceof Array) return false;\r\n  return compareObs(vItem, yItem);\r\n}) && compareData(x.data, y.data);\r\nexport type TypedDestructable<V, EH extends EHConstraint<EH, ECtx>, ECtx> = Destructable<any, any, any, any, any, EH, ECtx> & Observable<V>;\r\n\r\nexport class Destructable<dom, cim extends TVCDA_CIM, k extends TVCDADepConstaint<dom, cim>, X extends dom, n extends 1 | 2, EH extends EHConstraint<EH, ECtx>, ECtx>\r\n  extends Observable<AppX<'V', cim, k, X>> implements ObsWithOrigin<AppX<'V', cim, k, X>, EH, ECtx> {\r\n  readonly subject: BehaviorSubject<EntryObs<AppX<'D', cim, k, X>, AppX<'A', cim, k, X>, n, EH, ECtx>>;\r\n  private destroy: Subscription\r\n  get destroyed() { return this.destroy.closed }\r\n  source: Observable<AppX<'V', cim, k, X>>;\r\n  readonly origin = this;\r\n  readonly parent = this;\r\n  get handler(): CtxEH<dom, cim, k, n, EH, ECtx> {\r\n    return byKey<EHConstraint<EH, ECtx>, CtxEH<dom, cim, k, n, EH, ECtx>>(this.handlers, this.key);\r\n  }\r\n  constructor(\r\n    readonly handlers: EH,\r\n    readonly key: KeysOfType<EHConstraint<EH, ECtx>, CtxEH<dom, cim, k, n, EH, ECtx>> & string,\r\n    readonly c: AppX<'C', cim, k, X>,\r\n    init: EntryObs<AppX<'D', cim, k, X>, AppX<'A', cim, k, X>, n, EH, ECtx>,\r\n    compare = destructableCmp<dom, cim, k, n, EH, ECtx>(),\r\n    ...teardownList: TeardownLogic[]\r\n  ) {\r\n    super();\r\n    type V = AppX<'V', cim, k, X>;\r\n    type C = AppX<'C', cim, k, X>;\r\n    type D = AppX<'D', cim, k, X>;\r\n    type A = AppX<'A', cim, k, X>;\r\n    const handler = this.handler;\r\n    this.subject = new BehaviorSubject(init);\r\n    this.destroy = new Subscription(() => {\r\n      if (!this.subject.isStopped) this.subject.unsubscribe();\r\n      else this.subject.closed = true;\r\n    });\r\n    teardownList.forEach(cb => this.destroy.add(cb));\r\n    this.source = new Observable<V>(subscriber => {\r\n      const subs = this.subject.pipe(\r\n        distinctUntilChanged(compare),\r\n        alternMap(({ args, data }) => {\r\n          const array = args.map(args => args instanceof Array ? eagerCombineAll(args) : args);\r\n          return (eagerCombineAll(array) as Observable<A>).pipe(\r\n            map(args => [args, data, c] as [A, D, C]),\r\n          )\r\n        }, { completeWithInner: true, completeWithSource: true }),\r\n        tap(undefined, err => this.subject.error(err), () => this.subject.complete()),\r\n        scan<[A, D, C], V, null>((old, [args, data, c]) => handler.ctr(args, data, c, old), null)\r\n      ).subscribe(subscriber);\r\n      subs.add(this.destroy);\r\n      return subs;\r\n    });\r\n    this.operator = shareReplay({ bufferSize: 1, refCount: true })(this).operator;\r\n  }\r\n}\r\n","/// <reference path=\"../typings/deep-is.d.ts\" />\r\n\r\nimport { CtxH, Ref, EHConstraint, DestructableCtr, CtxEH, JsonObject, Json } from './types';\r\nimport { DeepDestructable, TypedDestructable, Destructable } from './destructable';\r\nimport { map as dep_map } from 'dependent-type';\r\nimport type { BadApp, Fun } from 'dependent-type';\r\nimport { toCond } from '../utils/guards';\r\nimport { deref } from '.';\r\nimport { TeardownLogic } from 'rxjs';\r\nimport equal from 'deep-is';\r\nimport { QuickPromise } from '../utils/quick-promise';\r\n\r\nconst { asyncDepMap } = dep_map;\r\n\r\n/** @summary Filters X by C */\r\nexport declare const F_F: unique symbol;\r\n/** @summary Returns constant C */\r\nexport declare const F_C: unique symbol;\r\n/** @summary Identity */\r\nexport declare const F_ID: unique symbol;\r\n\r\nexport declare const F_ArrArgs: unique symbol;\r\nexport declare const F_Destructable: unique symbol;\r\nexport declare const F_Ref: unique symbol;\r\n\r\nexport type ToRef<X extends any[]> = Ref<any>[] & { [P in Exclude<keyof X, keyof any[]>]: Ref<X[P]> };\r\ndeclare module 'dependent-type' {\r\n  export interface TypeFuncs<C, X> {\r\n    [F_F]: X extends C ? X : BadApp<Fun<typeof F_F, C>, X>;\r\n    [F_C]: C,\r\n    [F_ID]: X,\r\n    [F_ArrArgs]: X extends any[] ? ToRef<X> : BadApp<Fun<typeof F_ArrArgs, C>, X>,\r\n    [F_Destructable]: TypedDestructable<C[0 & keyof C][X & keyof C[0 & keyof C]], C[1 & keyof C], C[2 & keyof C]>,\r\n    [F_Ref]: Ref<C[X & keyof C]>,\r\n  }\r\n}\r\n\r\n\r\nexport declare const F_Any: unique symbol;\r\n\r\ndeclare module 'dependent-type' {\r\n  export interface TypeFuncs<C, X> {\r\n    [F_Any]: any,\r\n  }\r\n}\r\n\r\n\r\nexport type ArrayCim = { T: [never, Ref<any>[]], V: [never, any[]], C: [null, null], D: [null, null], A: [never, any[]] };\r\nexport type ArrayTypeKeys = { T: typeof F_ArrArgs, V: typeof F_ID, C: typeof F_C, D: typeof F_C, A: typeof F_ID };\r\n\r\nexport const ArrayCtr: DestructableCtr<any[], ArrayCim, ArrayTypeKeys> = <X extends any[]>(x: X, _d: null, _c: null, old: any[] | null) => {\r\n  if (old) { old.splice(0); x = Object.assign(old, x); }\r\n  return x;\r\n}\r\n\r\nexport type ArrayHandler<EH extends EHConstraint<EH, ECtx>, ECtx> = CtxH<any[], ArrayCim, ArrayTypeKeys, 1, EH, ECtx>;\r\nexport const ArrayHandler = <EH extends EHConstraint<EH, ECtx>, ECtx>(): ArrayHandler<EH, ECtx> => ({\r\n  decode: ({ deref }) => (_id, data) => ({ args: data.map(ref => deref(ref)) as any, data: null, n: 1 }),\r\n  encode: ({ ref }) => <C extends any[]>({ args }: { args: DeepDestructable<C, 1, EH, ECtx> }) =>\r\n    asyncDepMap<Exclude<keyof C, keyof any[]>, [\r\n      [[C, EH, ECtx], TypedDestructable<C[number], EH, ECtx>],\r\n      [C, Ref<C[Exclude<keyof C, keyof any[]>]>],\r\n    ], [typeof F_Destructable, typeof F_Ref]>(args, ref, QuickPromise).then(v => toCond<any[], C, ToRef<C>, any>(v)),\r\n  ctr: ArrayCtr,\r\n});\r\n\r\nexport type ArrayDestructable<A extends any[], EH extends EHConstraint<EH, ECtx>, ECtx> = Destructable<any[], ArrayCim, ArrayTypeKeys, A, 1, EH, ECtx>;\r\nexport const wrapArray = <A extends any[], EH extends EHConstraint<EH, ECtx> & { Array: ArrayHandler<EH, ECtx> }, ECtx>(args: DeepDestructable<A, 1, EH, ECtx>, handlers: EH, ...teardownList: TeardownLogic[]): ArrayDestructable<A, EH, ECtx> => new Destructable(\r\n  handlers, 'Array', null, { data: null, args, n: 1 }, undefined, ...teardownList\r\n);\r\n\r\nexport const toArray = <EH extends EHConstraint<EH, ECtx> & { Array: ArrayHandler<EH, ECtx> }, ECtx>(\r\n  deref: deref<EH, ECtx>\r\n) => (p: Ref<any[]>) => deref<0, [[any[], ArrayCim]], [ArrayTypeKeys], [any[]], [1]>(p, 'Array');\r\n\r\n\r\nexport type JsonCim = { T: [never, JsonObject], V: [never, JsonObject], C: [null, null], D: [never, JsonObject], A: [[], []] };\r\nexport type JsonTypeKeys = { T: typeof F_ID, V: typeof F_ID, C: typeof F_C, D: typeof F_ID, A: typeof F_C };\r\nconst deepUpdate = <T extends JsonObject>(target: JsonObject, source: T) => {\r\n  const keys = (o: JsonObject) => Object.keys(o) as never[];\r\n  const onlyTargetKeys = new Set(keys(target));\r\n  for (const key of keys(source)) {\r\n    onlyTargetKeys.delete(key);\r\n    const targetItem = target[key] as Json | undefined, sourceItem = source[key] as Json;\r\n    if (targetItem && sourceItem && typeof targetItem === 'object' && typeof sourceItem === 'object' && Array.isArray(targetItem) === Array.isArray(sourceItem)) {\r\n      deepUpdate(targetItem, sourceItem);\r\n    } else target[key] = sourceItem as never;\r\n  }\r\n  for (const key of onlyTargetKeys) delete target[key];\r\n  return target as T;\r\n}\r\nexport const JsonCtr: DestructableCtr<JsonObject, JsonCim, JsonTypeKeys> = <X extends JsonObject>(\r\n  _: [], data: X, _c: null, old: X | null\r\n) => old ? deepUpdate(old, data) : data;\r\n\r\nconst clone = <T extends Json>(o: T): T => {\r\n  return o === null ? o : o instanceof Array ? o.map(clone) as T : typeof o === 'object' ? Object.fromEntries(Object.entries(o as JsonObject).map(([k, v]) => [k, clone(v)])) as T : o;\r\n};\r\n\r\nexport type JsonHandler<EH extends EHConstraint<EH, ECtx>, ECtx> = CtxH<JsonObject, JsonCim, JsonTypeKeys, 1, EH, ECtx>;\r\nexport const JsonHandler = <EH extends EHConstraint<EH, ECtx>, ECtx>(): JsonHandler<EH, ECtx> => ({\r\n  decode: () => (_id, data) => ({ args: [] as [], data, n: 1 }),\r\n  encode: () => ({ data, old }) => old && equal(data, old) ? undefined : clone(data),\r\n  ctr: JsonCtr,\r\n});\r\nexport type JsonDestructable<X extends JsonObject, EH extends EHConstraint<EH, ECtx>, ECtx> = Destructable<JsonObject, JsonCim, JsonTypeKeys, X, 1, EH, ECtx>;\r\nexport const wrapJson = <X extends JsonObject, EH extends EHConstraint<EH, ECtx> & { Json: JsonHandler<EH, ECtx> }, ECtx>(data: X, handlers: EH, ...teardownList: TeardownLogic[]): JsonDestructable<X, EH, ECtx> => new Destructable(\r\n  handlers, 'Json', null, { args: [] as [], data, n: 1 }, undefined, ...teardownList\r\n);\r\n\r\nexport const toJson = <EH extends EHConstraint<EH, ECtx> & { Json: JsonHandler<EH, ECtx> }, ECtx>(\r\n  deref: deref<EH, ECtx>\r\n) => (p: Ref<JsonObject>) => deref<0, [[JsonObject, JsonCim]], [JsonTypeKeys], [JsonObject], [1]>(p, 'Json');\r\n\r\n","export * from './store';\r\nexport * from './handlers';\r\nexport * from './destructable';\r\nexport * from './types';\r\nexport * from './proxy';\r\nexport * from 'dependent-type';\r\nexport type { Cancellable, Config, Result } from 'rx-async';\r\nexport * as rx_async from 'rx-async';\r\nexport * as altern_map from 'altern-map';\r\nexport * as utils from '../utils';","import { Store } from \"./store\";\r\nimport { Subject, Subscription } from \"rxjs\";\r\nimport { filter, take } from \"rxjs/operators\";\r\nimport { GlobalRef, RHConstraint, CallHandler } from \"./types\";\r\nimport { QuickPromise } from \"../utils/quick-promise\";\r\n\r\nexport type DataGram<T extends string> = { channel: number, type: T, data: string };\r\n\r\nexport const startListener = <RH extends RHConstraint<RH, ECtx>, ECtx>(\r\n  store: Store<RH, ECtx>,\r\n  from: Subject<DataGram<'put' | 'unsubscribe' | 'error' | 'complete' | 'call' | 'end_call'>>,\r\n  to: Subject<DataGram<'response_put' | 'response_call' | 'call_error' | 'call_complete'>>,\r\n) => from.subscribe(function (this: Subscription, { channel, type, data }) {\r\n  switch (type) {\r\n    case 'put': {\r\n      const refs = store.unserialize(JSON.parse(data))!\r\n      return to.next({ channel, type: 'response_put', data: JSON.stringify(refs) });\r\n    }\r\n    case 'unsubscribe':\r\n      return store.get(data)?.[1].subscription?.unsubscribe()\r\n    case 'error': {\r\n      const { id, msg } = JSON.parse(data);\r\n      const obs = store.get(id)?.[0];\r\n      if (!obs) return;\r\n      return (obs as typeof obs.origin).subject.error(msg);\r\n    }\r\n    case 'complete': {\r\n      const obs = store.get(data)?.[0];\r\n      if (!obs) return;\r\n      return (obs as typeof obs.origin).subject.complete();\r\n    }\r\n    case 'call': {\r\n      const { fId, param, argId } = JSON.parse(data);\r\n      store.local(fId, param, { id: argId } as GlobalRef<any>).then(obs => {\r\n        const endCallSubs = from.pipe(filter(x => x.channel === channel && x.type === 'end_call')).subscribe(() => {\r\n          subs.unsubscribe();\r\n        });\r\n        const subs = obs.subscribe(def => {\r\n          to.next({ channel, type: 'response_call', data: JSON.stringify(def) });\r\n        }, err => {\r\n          to.next({ channel, type: 'call_error', data: `${err}` });\r\n        }, () => {\r\n          to.next({ channel, type: 'call_complete', data: '' });\r\n        });\r\n        subs.add(endCallSubs);\r\n        this.add(subs);\r\n      });\r\n      return;\r\n    }\r\n  };\r\n});\r\n\r\n\r\nexport const createCallHandler = <RH extends RHConstraint<RH, ECtx>, ECtx>(\r\n  to: Subject<DataGram<'put' | 'unsubscribe' | 'error' | 'complete' | 'call' | 'end_call'>>,\r\n  from: Subject<DataGram<'response_put' | 'response_call' | 'call_error' | 'call_complete'>>,\r\n  channel: [number]\r\n): CallHandler<any, any, any, any, any, any, any, any, any, any, any, RH, ECtx> => {\r\n  return {\r\n    serialized: new WeakMap(),\r\n    handlers: () => {\r\n      const putChannel = channel[0]++, callChannel = channel[0]++;\r\n      return {\r\n        end_call: () => to.next({ channel: callChannel, type: 'end_call', data: '' }),\r\n        call_unsubscribe: ref => to.next({ channel: putChannel, data: ref.id, type: 'unsubscribe' }),\r\n        complete: ref => to.next({ channel: putChannel, data: ref.id, type: 'complete' }),\r\n        put: (def) => to.next({ channel: putChannel, type: 'put', data: JSON.stringify(def) }),\r\n        call: (fId, param, ref) => to.next({ channel: callChannel, data: JSON.stringify({ fId, param, argId: ref.id }), type: 'call' }),\r\n        error: (ref, e) => to.next({ channel: putChannel, data: JSON.stringify({ id: ref.id, msg: `${e}` }), type: 'error' }),\r\n        next: () => from.pipe(filter(m => m.channel === putChannel), take(1)).toPromise(QuickPromise).then(response => {\r\n          return JSON.parse(response.data);\r\n        }),\r\n        subscribeToResult: cbs => from.pipe(filter(x => x.channel === callChannel)).subscribe(\r\n          function (this: Subscription, { data, type }) {\r\n            if (type === 'response_call') {\r\n              cbs.resp_call(JSON.parse(data));\r\n            }\r\n            if (type === 'call_error') {\r\n              cbs.err_call(data).then(() => this.unsubscribe());\r\n              this.unsubscribe();\r\n            }\r\n            if (type === 'call_complete') {\r\n              cbs.comp_call().then(() => this.unsubscribe());\r\n            }\r\n          }\r\n        )\r\n      }\r\n    }\r\n  }\r\n}","import { Subscription, Observable, ObservedValueOf, TeardownLogic, concat, of, NEVER, identity, combineLatest } from 'rxjs';\r\nimport {\r\n  GlobalRef, LocalRef, Ref, deref, CtxH, TVCDA_CIM, TVCDADepConstaint,\r\n  ModelsDefinition, xDerefHandlers, ModelDefinition, derefReturn, EModelsDefinition,\r\n  xderef, derefHandlers, ref, RHConstraint, ObsWithOrigin, EHConstraint, xDerefHandler, derefHandler, AnyModelDefinition, CallHandler,\r\n} from './types'\r\nimport { Destructable, EntryObs, TypedDestructable } from './destructable';\r\nimport { KeysOfType, TypeFuncs, AppX, App, Fun, BadApp } from 'dependent-type';\r\nimport { NonUndefined } from 'utility-types';\r\nimport { byKey } from '../utils/guards';\r\nimport { map as dep_map } from 'dependent-type';\r\nimport { eagerCombineAll, current } from '../utils/rx-utils';\r\nimport { defineProperty } from '../utils/global';\r\nimport { map, distinctUntilChanged, shareReplay, finalize, scan, filter, startWith, tap } from 'rxjs/operators';\r\nimport { alternMap } from 'altern-map';\r\nimport { asyncMap, Cancellable } from 'rx-async';\r\nimport { Json, DeepDestructable } from '.';\r\n\r\nconst { depMap } = dep_map;\r\n\r\ntype ObsCache<\r\n  indices extends number,\r\n  dcim extends Record<indices, [any, TVCDA_CIM]>,\r\n  keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n  X extends { [P in indices]: any },\r\n  N extends Record<indices, 1 | 2>,\r\n  EH extends EHConstraint<EH, ECtx>,\r\n  ECtx\r\n  > = {\r\n    [i in indices]?: {\r\n      obs: Destructable<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], EH, ECtx>,\r\n      id: string, subs?: Subscription\r\n    }\r\n  };\r\n\r\nexport declare const F_Custom_Ref: unique symbol;\r\nexport declare const F_I_X: unique symbol;\r\n\r\ntype ParentOfC = { 0: any, 1: any, 2: any };\r\ntype RefHelper<C extends ParentOfC, X extends number> = App<Fun<C[1][X], C[0][X][0]>, C[2][X]> & C[0][X][1];\r\ntype RefTypeError<C, X> = BadApp<Fun<typeof F_Custom_Ref, C>, X>;\r\ntype CondRefHelper<C, X> = X extends number ? C extends ParentOfC ? RefHelper<C, X> : RefTypeError<C, X> : RefTypeError<C, X>;\r\ntype GlobalRefHelper<indices extends number, C extends ParentOfC> = { [i in indices]: i extends number ? RefHelper<C, i> : RefTypeError<C, i> } & any[]\r\ndeclare module 'dependent-type' {\r\n  export interface TypeFuncs<C, X> {\r\n    [F_Custom_Ref]: CondRefHelper<C, X>;\r\n    [F_I_X]: { i: X };\r\n  }\r\n}\r\n\r\nexport type PromiseCtr = {\r\n  new <T>(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): PromiseLike<T>;\r\n  all<T>(values: readonly (T | PromiseLike<T>)[]): PromiseLike<T[]>,\r\n  resolve<T>(value: T | PromiseLike<T>): PromiseLike<T>;\r\n}\r\n\r\n\r\nexport const runit = <R, N>(gen: Generator<N | PromiseLike<N>, R, N>, promiseCtr: PromiseCtr) => {\r\n  const runThen = (...args: [] | [N]): PromiseLike<R> => {\r\n    const v = args.length ? gen.next(args[0]) : gen.next();\r\n    if (v.done) return promiseCtr.resolve(v.value);\r\n    return promiseCtr.resolve(v.value).then(runThen);\r\n  }; return runThen();\r\n}\r\n\r\nexport function* wait<T>(x: T | PromiseLike<T>): Generator<T | PromiseLike<T>, T, T> {\r\n  return yield x;\r\n}\r\n\r\nexport function asAsync<T extends any[], R, U = void, N = any>(f: (this: U, ...args: T) => Generator<N | PromiseLike<N>, R, N>, promiseCtr: PromiseCtr, thisArg: U): (...args: T) => PromiseLike<R>;\r\nexport function asAsync<T extends any[], R, U = void, N = any>(f: (this: U | void, ...args: T) => Generator<N | PromiseLike<N>, R, N>, promiseCtr: PromiseCtr, thisArg?: U): (...args: T) => PromiseLike<R>;\r\nexport function asAsync<T extends any[], R, U = void, N = any>(f: (this: U, ...args: T) => Generator<N | PromiseLike<N>, R, N>, promiseCtr: PromiseCtr, thisArg: U): (...args: T) => PromiseLike<R> {\r\n  return (...args: T) => runit(f.call(thisArg, ...args as T), promiseCtr);\r\n}\r\n\r\nexport class BiMap<EH extends EHConstraint<EH, ECtx>, ECtx, D, k = string> {\r\n  private byId = new Map<k, [ObsWithOrigin<any, EH, ECtx>, D]>();\r\n  private byObs = new Map<TypedDestructable<any, EH, ECtx>, k>();\r\n  private oldId = new WeakMap<TypedDestructable<any, EH, ECtx>, k>();\r\n  get(id: k) { return this.byId.get(id); }\r\n  delete(id: k) {\r\n    const stored = this.byId.get(id);\r\n    if (stored) this.byObs.delete(stored[0].origin);\r\n    return this.byId.delete(id);\r\n  }\r\n  set(id: k, value: [ObsWithOrigin<any, EH, ECtx>, D]) {\r\n    this.byObs.set(value[0].origin, id);\r\n    this.oldId.set(value[0].origin, id);\r\n    this.byId.set(id, value);\r\n  };\r\n  reuseId(obs: TypedDestructable<any, EH, ECtx>, id: k) {\r\n    this.oldId.set(obs, id);\r\n  };\r\n  find(obs: TypedDestructable<any, EH, ECtx>) {\r\n    return this.byObs.get(obs);\r\n  };\r\n  usedId(obs: TypedDestructable<any, EH, ECtx>) {\r\n    return this.oldId.get(obs);\r\n  };\r\n  get size() { return this.byId.size }\r\n  keys() { return this.byId.keys() }\r\n  entries() { return this.byId.entries() }\r\n  values() { return this.byId.values() }\r\n}\r\n\r\nconst one = BigInt(1);\r\n\r\nexport class Store<RH extends RHConstraint<RH, ECtx>, ECtx> {\r\n  private map = new BiMap<RH, ECtx, { subscription?: Subscription, externalId?: PromiseLike<string> }>();\r\n  private next = one;\r\n\r\n  constructor(readonly handlers: RH, private extra: ECtx, private promiseCtr: PromiseCtr, readonly name?: string) { }\r\n\r\n  private getNext(id?: string): string {\r\n    if (id === undefined) return `${this.next++}`;\r\n    const intId = BigInt(id);\r\n    if (this.next <= intId) this.next = intId + one;\r\n    return id;\r\n  }\r\n\r\n  findRef<V>(obs: TypedDestructable<V, RH, ECtx>) {\r\n    const id = this.map.find(obs);\r\n    return typeof id === 'string' ? { id } as GlobalRef<V> : id;\r\n  };\r\n\r\n  private _unserialize<\r\n    indices extends number,\r\n    dcim extends Record<indices, [any, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: any },\r\n    N extends Record<indices, 1 | 2>,\r\n    i extends indices,\r\n    >(\r\n      key: KeysOfType<RHConstraint<RH, ECtx>, CtxH<dcim[i][0], dcim[i][1], keys[i], N[i], RH, ECtx>> & string,\r\n      ctx: ECtx & { ref: ref<RH, ECtx>, deref: deref<RH, ECtx>, xderef: xderef<RH, ECtx> },\r\n      models: ModelsDefinition<indices, dcim, keys, X, N, RH, ECtx> & { [_ in i]: ModelDefinition<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx> },\r\n      cache: ObsCache<indices, dcim, keys, X, N, RH, ECtx>,\r\n      i: i\r\n    ): NonUndefined<ObsCache<indices, dcim, keys, X, N, RH, ECtx>[i]> {\r\n    const handler = byKey<RHConstraint<RH, ECtx>, CtxH<dcim[i][0], dcim[i][1], keys[i], N[i], RH, ECtx>>(this.handlers, key);\r\n    if (cache[i] !== undefined) return cache[i] as NonUndefined<typeof cache[i]>;\r\n    const model: ModelDefinition<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx> = models[i], { id: usedId } = model;\r\n    if (model.data === undefined) throw new Error('Trying to access a destructed object');\r\n    const id = this.getNext(usedId);\r\n    const entry = handler.decode(ctx)(id, model.data);\r\n    if (usedId !== undefined) {\r\n      const stored = this.map.get(usedId);\r\n      if (stored !== undefined) {\r\n        const obs = stored[0].origin as Destructable<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx>;\r\n        if (obs.key !== model.type || obs.c !== model.c) {\r\n          throw new Error('Trying to update a wrong type');\r\n        }\r\n        obs.subject.next(entry);\r\n        const res: ObsCache<indices, dcim, keys, X, N, RH, ECtx>[i] = { id: usedId, obs, subs: stored[1].subscription };\r\n        return res as NonUndefined<typeof res>;\r\n      }\r\n    }\r\n    const obs = this._insert<indices, dcim, keys, X, N, i>(key, entry, ctx, id, model.c);\r\n    cache[i] = { obs, id };\r\n    return cache[i] as NonUndefined<typeof cache[i]>\r\n  }\r\n  private _insert<\r\n    indices extends number,\r\n    dcim extends Record<indices, [any, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: any },\r\n    N extends Record<indices, 1 | 2>,\r\n    i extends indices,\r\n    >(\r\n      key: KeysOfType<RHConstraint<RH, ECtx>, CtxH<dcim[i][0], dcim[i][1], keys[i], N[i], RH, ECtx>> & string,\r\n      entry: EntryObs<AppX<'D', dcim[i][1], keys[i], X[i]>, AppX<'A', dcim[i][1], keys[i], X[i]>, N[i], RH, ECtx>,\r\n      ctx: ECtx & { ref: ref<RH, ECtx>, deref: deref<RH, ECtx>, xderef: xderef<RH, ECtx> },\r\n      id: string,\r\n      c: AppX<'C', dcim[i][1], keys[i], X[i]>,\r\n  ) {\r\n    const handler = byKey<RHConstraint<RH, ECtx>, CtxH<dcim[i][0], dcim[i][1], keys[i], N[i], RH, ECtx>>(this.handlers, key);\r\n    const compare = handler.compare?.(ctx);\r\n    const obs = new Destructable<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx>(\r\n      this.handlers, key, c, entry, compare, handler.destroy?.(ctx)(entry.data), () => this.map.delete(id));\r\n    this.map.set(id, [obs, {}]);\r\n    return obs;\r\n  }\r\n  ref: ref<RH, ECtx> = <V>(obs: TypedDestructable<V, RH, ECtx>): GlobalRef<V> => {\r\n    const id = this.map.find(obs)!;\r\n    return { id } as GlobalRef<V>;\r\n  };\r\n  checkTypes = <\r\n    indices extends number,\r\n    dcim extends Record<indices, [any, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: dcim[P][0] },\r\n    N extends Record<indices, 1 | 2>,\r\n    >(v: ObsWithOrigin<{ [P in indices]: dcim[P][1]['V'][1]; }[indices], RH, ECtx>,\r\n      ...args: [xDerefHandlers<indices, dcim, keys, X, N, RH, ECtx>] | [derefHandlers<indices, dcim, keys, N, RH, ECtx>, 0]) => {\r\n    const err = () => new Error('Type Mismatch : ' + v.origin.key + ' not in ' + JSON.stringify(\r\n      depMap(args[0], (x: xDerefHandler<indices, dcim, keys, X, N, RH, ECtx, indices> | derefHandler<indices, dcim, keys, N, RH, ECtx, indices>) => x instanceof Array ? x[0] : x)));\r\n    if (args.length === 1) {\r\n      if (args[0].length && !args[0].some(([key, c]) => v.origin.handler === byKey(this.handlers, key) && v.origin.c === c)) throw err();\r\n    } else {\r\n      const handlers: EHConstraint<RH, ECtx> = this.handlers;\r\n      if (args[0].length && !args[0].some(key => v.origin.handler === byKey(handlers, key))) throw err();\r\n    }\r\n    return v as derefReturn<indices, dcim, keys, X, N, RH, ECtx>;\r\n  };\r\n  getter = <T extends object, V extends T = T>(r: Ref<T>) => {\r\n    if (!('id' in r)) throw new Error('There is no local context');\r\n    return this.map.get(r.id)![0] as ObsWithOrigin<V, RH, ECtx>;\r\n  }\r\n  xderef = (getter: <T extends object, V extends T = T>(r: Ref<T>) => ObsWithOrigin<V, RH, ECtx>): xderef<RH, ECtx> => <\r\n    indices extends number,\r\n    dcim extends Record<indices, [any, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: dcim[P][0] },\r\n    N extends Record<indices, 1 | 2>,\r\n    >(\r\n      ref: Ref<{ [P in indices]: dcim[P][1]['V'][1] }[indices]>,\r\n      ...handlers: xDerefHandlers<indices, dcim, keys, X, N, RH, ECtx>\r\n    ): derefReturn<indices, dcim, keys, X, N, RH, ECtx> => this.checkTypes(getter(ref), handlers);\r\n  deref = (getter: <T extends object>(r: Ref<T>) => ObsWithOrigin<T, RH, ECtx>): deref<RH, ECtx> => <\r\n    indices extends number,\r\n    dcim extends Record<indices, [any, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: dcim[P][0] },\r\n    N extends Record<indices, 1 | 2>,\r\n    >(\r\n      ref: Ref<{ [P in indices]: dcim[P][1]['V'][1] }[indices]>,\r\n      ...handlers: derefHandlers<indices, dcim, keys, N, RH, ECtx>\r\n    ) => this.checkTypes<indices, dcim, keys, X, N>(getter(ref), handlers, 0);\r\n  emptyContext = {\r\n    deref: this.deref(this.getter), xderef: this.xderef(this.getter), ref: this.ref, ...this.extra\r\n  };\r\n  unserialize<\r\n    indices extends number,\r\n    dcim extends Record<indices, [any, TVCDA_CIM]>,\r\n    keys extends { [P in indices]: TVCDADepConstaint<dcim[P][0], dcim[P][1]> },\r\n    X extends { [P in indices]: any },\r\n    N extends Record<indices, 1 | 2>,\r\n    >(\r\n      getModels: ModelsDefinition<indices, dcim, keys, X, N, RH, ECtx> | ((\r\n        ref: <i extends indices>(i: i) => LocalRef<AppX<'V', dcim[i][1], keys[i], X[i]>>\r\n      ) => ModelsDefinition<indices, dcim, keys, X, N, RH, ECtx>)\r\n    ): { [i in indices]: GlobalRef<AppX<'V', dcim[i][1], keys[i], X[i]>> } & GlobalRef<any>[] {\r\n    const session = [] as ObsCache<indices, dcim, keys, X, N, RH, ECtx>;\r\n    const models = getModels instanceof Function ? getModels(<i extends number>(i: i) => ({ $: i } as { $: i, _: any })) : getModels;\r\n    const _push = <i extends indices>(i: i) => {\r\n      const modelsAsObject: { [i in indices]: ModelDefinition<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx> & { i: i } } = models;\r\n      const m: ModelDefinition<dcim[i][0], dcim[i][1], keys[i], X[i], N[i], RH, ECtx> & { i: i } = modelsAsObject[i];\r\n      const _models = Object.assign(models, { [i]: m });\r\n      return { ...this._unserialize<indices, dcim, keys, X, N, i>(m.type, ctx, _models, session, i), m };\r\n    }\r\n    const getter = <T extends object, V extends T = T>(r: Ref<T>) => ('id' in r ? this.map.get(r.id)![0] : _push(r.$ as indices).obs) as TypedDestructable<V, RH, ECtx>;\r\n    const ref: ref<RH, ECtx> = this.ref;\r\n    const deref: deref<RH, ECtx> = this.deref(getter);\r\n    const xderef: xderef<RH, ECtx> = this.xderef(getter);\r\n    const ctx = { deref, ref, xderef, ...this.extra };\r\n    const subscriptions: Subscription[] = [];\r\n    const temp: Subscription[] = [];\r\n    try {\r\n      type vcim = { [P in indices]: dcim[P][1]['V'] };\r\n      type vkeys = { [P in indices]: keys[P]['V'] };\r\n      type RefTypeData = { 0: vcim, 1: vkeys, 2: X };\r\n      type Res = TypeFuncs<RefTypeData, indices>[typeof F_Custom_Ref];\r\n      const references: GlobalRefHelper<indices, RefTypeData> = depMap<indices, [\r\n        [never, { i: indices }], [RefTypeData, Res]\r\n      ], [typeof F_I_X, typeof F_Custom_Ref]>(\r\n        models, <i extends indices>({ i }: { i: i }, index: number) => {\r\n          i = index as i;\r\n          const { obs, id, subs, m } = _push(i);\r\n          const isNew = m.new !== false;\r\n          if (isNew && subs !== undefined) throw new Error('Trying to subscribe to an already subscribed entity');\r\n          if (isNew) subscriptions.push(this.map.get(id)![1].subscription = obs.subscribe(() => { }));\r\n          else if (!obs.subject.isStopped) temp.push(obs.subscribe(() => { }));\r\n          const ref = { id } as AppX<'V', dcim[i][1], keys[i], X[i]>;\r\n          return ref as CondRefHelper<RefTypeData, i>;\r\n        });\r\n      temp.forEach(subs => subs.unsubscribe());\r\n      return references;\r\n    } catch (e) {\r\n      temp.concat(subscriptions).forEach(subs => subs.unsubscribe());\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  append<\r\n    dom, cim extends TVCDA_CIM,\r\n    k extends TVCDADepConstaint<dom, cim>,\r\n    X extends dom,\r\n    n extends 1 | 2,\r\n    >(\r\n      key: KeysOfType<RH, CtxH<dom, cim, k, n, RH, ECtx>> & string,\r\n      entry: EntryObs<AppX<'D', cim, k, X>, AppX<'A', cim, k, X>, n, RH, ECtx>,\r\n      c: AppX<'C', cim, k, X>,\r\n  ) {\r\n    const id = this.getNext();\r\n    const obs = this._insert<0, [[dom, cim]], [k], [X], [n], 0>(key, entry, this.emptyContext, id, c)\r\n    const subs = this.map.get(id)![1].subscription = obs.subscribe(() => { });\r\n    return { id, obs, subs };\r\n  }\r\n  push<V>(obs: ObsWithOrigin<V, RH, ECtx>,\r\n    { ids, init, unload }: {\r\n      ids?: WeakMap<TypedDestructable<any, RH, ECtx>, string>,\r\n      unload?: () => void,\r\n      init?: (obs: TypedDestructable<any, RH, ECtx>) => void\r\n    } = {}\r\n  ): PromiseLike<{ wrapped: ObsWithOrigin<V, RH, ECtx>, ref: GlobalRef<V>, subscription: Subscription }> {\r\n    return asAsync(function* () {\r\n      init?.(obs.origin);\r\n      yield* wait(this.waiting.push.get(obs.origin));\r\n      const oldId = this.map.find(obs.origin);\r\n      const id = this.getNext(oldId ?? ids?.get(obs.origin) ?? this.map.usedId(obs.origin));\r\n      let wrapped = obs;\r\n      let subscription: Subscription;\r\n      let resolve!: () => void, promise = new this.promiseCtr(r => resolve = r);\r\n\r\n      if (oldId === undefined) {\r\n        let destroyed = false;\r\n        const temp: Subscription[] = [];\r\n        const clear = () => {\r\n          temp.forEach(s => s.unsubscribe());\r\n          temp.length = 0;\r\n        };\r\n        wrapped = defineProperty(\r\n          Object.assign(eagerCombineAll(obs, obs.origin.subject.pipe(\r\n            scan<EntryObs<any, any, any, RH, ECtx>, PromiseLike<Observable<any[]>>, null>((acc, { args, n }) => {\r\n              const wrap = asAsync(function* (obs: TypedDestructable<any, RH, ECtx>) {\r\n                const res = yield* wait(this.push(obs, { ids, init }));\r\n                temp.push(res.subscription);\r\n                return res.wrapped;\r\n              }, this.promiseCtr, this);\r\n              const array: PromiseLike<ObsWithOrigin<any, RH, ECtx> | Observable<any[]>>[] = n === 2\r\n                ? (args as DeepDestructable<any, 2, RH, ECtx>).map(arg => this.promiseCtr.all(arg.map(wrap)).then<Observable<any[]>>(eagerCombineAll))\r\n                : (args as DeepDestructable<any, 1, RH, ECtx>).map(wrap);\r\n              const ret: PromiseLike<Observable<any[]>> = this.promiseCtr.all(array).then<Observable<any[]>>(eagerCombineAll);\r\n              if (!acc) ret.then(resolve);\r\n              return acc ? acc.then(() => ret) : ret;\r\n            }, null),\r\n            asyncMap(value => value.then((value): Cancellable<Observable<any[]>> => ({ ok: true, value }))),\r\n            alternMap(identity, { completeWithInner: true }),\r\n            tap(clear),\r\n            distinctUntilChanged((x, y) => x.length === y.length && x.every((v, i) => {\r\n              const w = y[i];\r\n              if (v instanceof Array && w instanceof Array) {\r\n                return v.length === w.length && v.every((u, i) => u === w[i]);\r\n              }\r\n              return v === w\r\n            })),\r\n          )).pipe(\r\n            finalize(() => { unload?.(); clear(); this.map.delete(id); destroyed = true; }),\r\n            map(([v]) => v), shareReplay({ bufferSize: 1, refCount: true }),\r\n          ), { origin: obs.origin, parent: obs }),\r\n          'destroyed', { get() { return destroyed } }\r\n        );\r\n        this.map.set(id, [wrapped, {}]);\r\n        subscription = wrapped.subscribe();\r\n        yield* wait(promise);\r\n      } else {\r\n        wrapped = this.map.get(id)![0];\r\n        subscription = wrapped.subscribe();\r\n      }\r\n      return { ref: { id } as GlobalRef<V>, wrapped, subscription };\r\n    }, this.promiseCtr, this)() as any;\r\n  }\r\n  private waiting: Record<'serialize' | 'push', WeakMap<TypedDestructable<any, RH, ECtx>, PromiseLike<GlobalRef<any>>>> = {\r\n    push: new WeakMap,\r\n    serialize: new WeakMap,\r\n  };\r\n  private resolvers: Record<'serialize' | 'push', WeakMap<TypedDestructable<any, RH, ECtx>, (ref: GlobalRef<any>) => void>> = {\r\n    push: new WeakMap,\r\n    serialize: new WeakMap,\r\n  };\r\n  getResolver = <V>(obs: TypedDestructable<V, RH, ECtx>, key: 'serialize' | 'push') => {\r\n    let resolve!: (ref: GlobalRef<V>) => void;\r\n    const promise = new this.promiseCtr<GlobalRef<V>>(res => resolve = res);\r\n    this.waiting[key].set(obs, promise);\r\n    this.resolvers[key].set(obs, resolve);\r\n    promise.then(() => { this.waiting[key].delete(obs); this.resolvers[key].delete(obs); });\r\n    return resolve;\r\n  }\r\n  serialize = <dom, cim extends TVCDA_CIM, k extends TVCDADepConstaint<dom, cim>, X extends dom, n extends 1 | 2>(\r\n    obs: Destructable<dom, cim, k, X, n, RH, ECtx>,\r\n    getResolver?: <V>(obs: TypedDestructable<V, RH, ECtx>) => (ref: GlobalRef<V>) => void,\r\n    isNew: boolean = true,\r\n  ) => {\r\n    type Attr = {\r\n      type: keyof RH & string, c: any, value: any, data: any, new?: boolean, id?: string,\r\n      resolve?: (x: GlobalRef<any>) => void\r\n    };\r\n    type Session = BiMap<RH, ECtx, Attr | null, number>;\r\n    type V = AppX<'V', cim, k, X>;\r\n    type SMR = [Session, Map<TypedDestructable<any, RH, ECtx>, { data: any }>, Ref<V>];\r\n    return obs.pipe(scan<V, PromiseLike<SMR> | null>(asAsync<[PromiseLike<SMR> | null], SMR, this>(function* (oldPromise): Generator<any, SMR, any> {\r\n      const session: Session = new BiMap;\r\n      const allData: SMR[1] = new Map();\r\n      let next = 1;\r\n      const getter = <T extends object, V extends T = T>(r: Ref<T>) => ('id' in r ? this.map.get(r.id) : session.get(r.$))![0] as TypedDestructable<V, RH, ECtx>;\r\n      const snapshot = new Map<TypedDestructable<any, RH, ECtx>, { data: any, entry: EntryObs<any, any, any, RH, ECtx> }>();\r\n      const inMap = (arg: TypedDestructable<any, RH, ECtx>) => this.map.find(arg) !== undefined;\r\n      const addToSnapshot = (obs: TypedDestructable<any, RH, ECtx>) => {\r\n        if (snapshot.has(obs)) return;\r\n        const entry = obs.subject.value;\r\n        snapshot.set(obs, { data: current(obs), entry });\r\n        entry.args.forEach(args => {\r\n          if (args instanceof Array) args.forEach(addToSnapshot);\r\n          else addToSnapshot(args);\r\n        });\r\n      }\r\n      addToSnapshot(obs);\r\n      const ref: ref<RH, ECtx> = <V>(iObs: TypedDestructable<V, RH, ECtx>): PromiseLike<Ref<V>> => asAsync(function* () {\r\n        let { data: value, entry } = snapshot.get(iObs)!;\r\n        yield this.waiting.serialize.get(iObs);\r\n        const id = this.map.find(iObs);\r\n        //const isHere = true; //entry.args.every(arg => arg instanceof Array ? arg.every(inMap) : inMap(arg));\r\n        const resolve = id === undefined ? getResolver?.(iObs) : undefined;\r\n        let oldData: { data: any } | undefined = undefined, data: { data: any } | undefined;\r\n        if (id !== undefined && oldPromise) {\r\n          const [, old] = yield* wait(oldPromise);\r\n          oldData = old.get(iObs);\r\n        }\r\n        const old = oldData ? { old: oldData.data } : {};\r\n        const encode = () => iObs.handler.encode(ctx)({ ...entry, c: iObs.c, ...old });\r\n        if (oldData) { //if (isHere)\r\n          data = { data: yield* wait(encode()) };\r\n          if (data.data === undefined) {\r\n            allData.set(iObs, oldData);\r\n            return { id } as GlobalRef<V>;\r\n          }\r\n        }\r\n        const i = session.find(iObs);\r\n        const $ = i ?? (iObs === obs ? 0 : next++);\r\n        if (i === undefined) {\r\n          if (!data) {\r\n            session.set($, [iObs, null]);\r\n            data = { data: yield* wait(encode()) };\r\n          }\r\n          allData.set(iObs, data);\r\n          const usedId = this.map.usedId(iObs);\r\n          const attr: Attr = { type: iObs.key, value, ...data, c: iObs.c, id: usedId };\r\n          if (resolve) attr.resolve = resolve;\r\n          attr.new = $ === 0 && oldPromise === null && (isNew || !inMap(iObs));\r\n          session.set($, [iObs, attr]);\r\n        }\r\n        return { $ } as LocalRef<V>;\r\n      }, this.promiseCtr, this)();\r\n      const ctx = {\r\n        deref: this.deref(getter), xderef: this.xderef(getter), ref, ...this.extra\r\n      };\r\n      const ret: SMR = [session, allData, yield* wait(this.promiseCtr.resolve(ref(obs)))];\r\n      return ret;\r\n    }, this.promiseCtr, this), null), asyncMap<PromiseLike<SMR> | null, SMR>(result => {\r\n      return runit((function* () {\r\n        const ret: Cancellable<SMR> = result ? { ok: true, value: yield* wait(result) } : {};\r\n        return ret;\r\n      })(), this.promiseCtr);\r\n    }, { mode: 'merge', wait: true }), map(([session, , ref]) => {\r\n      const entries = Array(session.size).fill(0).map((_, i) => session.get(i)!);\r\n      if (entries.length === 0) {\r\n        if ('$' in ref) throw new Error('Unexpected');\r\n        return null;\r\n      }\r\n      return entries.map(([, definition], i) => {\r\n        const def = { i, ...definition! }\r\n        delete def.value;\r\n        return def;\r\n      }) as AnyModelDefinition<RH, ECtx, 0>[] as EModelsDefinition<0, [[dom, cim]], [k], [X], [n], RH, ECtx>\r\n    }), filter((x): x is NonNullable<typeof x> => x !== null));\r\n  }\r\n  get(id: string) {\r\n    return this.map.get(id);\r\n  }\r\n  getValue<V>({ id }: GlobalRef<V>) {\r\n    const obs = this.get(id);\r\n    if (obs === undefined) throw new Error('Access to destroyed object');\r\n    return obs as [ObsWithOrigin<V, RH, ECtx>, (typeof obs)[1]];\r\n  }\r\n  functions: ((param: Json, arg: ObsWithOrigin<any, RH, ECtx>) => TypedDestructable<any, RH, ECtx>)[] = [];\r\n  local(fId: number, param: Json, arg: GlobalRef<any>) {\r\n    const obs = this.functions[fId](param, this.getValue(arg)[0]);\r\n    return this.push(obs).then(({ subscription }) => {\r\n      const serialized = this.serialize(obs);\r\n      return new Observable<ObservedValueOf<typeof serialized>>(subscriber => {\r\n        subscriber.add(subscription);\r\n        subscriber.add(serialized.subscribe(subscriber));\r\n      });\r\n    });\r\n  }\r\n  callReturnRef = new WeakMap<Subscription, PromiseLike<GlobalRef<any>>>();\r\n  remote<dom2, cim2 extends TVCDA_CIM, k2 extends TVCDADepConstaint<dom2, cim2>, X2 extends dom2, n2 extends 1 | 2>() {\r\n    return <dom, cim extends TVCDA_CIM, k extends TVCDADepConstaint<dom, cim>, X extends dom, n extends 1 | 2, P extends Json>(\r\n      fId: number, arg: Destructable<dom, cim, k, X, n, RH, ECtx>, param: P,\r\n      { handlers: makeOp, serialized }: CallHandler<dom, cim, k, X, n, P, dom2, cim2, k2, X2, n2, RH, ECtx>\r\n    ) => new Observable<AppX<'V', cim2, k2, X2>>(subscriber => void (asAsync(function* () {\r\n      type V = AppX<'V', cim, k, X>;\r\n      const makePromise = <T>(res?: (x: T) => void) => [new this.promiseCtr<T>(r => res = r), res!] as const;\r\n      const [promise, resolve] = makePromise<GlobalRef<V>>();\r\n      const callSubscription = new Subscription();\r\n      yield* wait(this.waiting.serialize.get(arg));\r\n      const op = makeOp();\r\n      let refObs = serialized.get(arg);\r\n      if (!refObs) serialized.set(arg, refObs = this.serialize(arg, obs => {\r\n        const resolver = this.getResolver(obs, 'serialize');\r\n        const withInsertion: typeof resolver = ref => {\r\n          this.map.reuseId(obs, ref.id);\r\n          resolver(ref);\r\n        };\r\n        return withInsertion;\r\n      }, false).pipe(asyncMap(asAsync(function* (def) {\r\n        const refsPromise = op.next();\r\n        op.put(def);\r\n        const refs = yield* wait(refsPromise);\r\n        refs.forEach((ref, i) => def[i]?.resolve?.(ref));\r\n        const ret: Cancellable<GlobalRef<V>> = { ok: true, value: refs[0] };\r\n        return ret;\r\n      }, this.promiseCtr, this)), tap(\r\n        undefined,\r\n        e => promise.then(refArg => op.error(refArg, e)),\r\n        () => promise.then(refArg => op.complete(refArg)),\r\n      ), shareReplay({ refCount: true, bufferSize: 1 })));\r\n      const paramSubs = refObs.subscribe(ref => resolve(ref));\r\n      const refTask = makePromise<GlobalRef<AppX<'V', cim2, k2, X>>>();\r\n      this.callReturnRef.set(subscriber, refTask[0]);\r\n      promise.then(refArg => {\r\n        callSubscription.add(() => {\r\n          if (paramSubs.closed) return;\r\n          paramSubs.unsubscribe();\r\n        });\r\n        if (paramSubs.closed) {\r\n          callSubscription.unsubscribe();\r\n          return;\r\n        }\r\n        return this.push(arg, {\r\n          init: obs => { if (this.map.usedId(obs) === undefined) this.getResolver(obs, 'push') },\r\n          unload: () => op.call_unsubscribe(refArg),\r\n        }).then(({ wrapped, subscription }) => ({ refArg, wrapped, subscription }));\r\n      }).then(res => {\r\n        if (!res) return;\r\n        const { refArg, subscription, wrapped } = res;\r\n        const subs = wrapped.subscribe();\r\n        subscription.unsubscribe();\r\n        callSubscription.add(() => subs.unsubscribe());\r\n        const responseSubs = op.subscribeToResult({\r\n          resp_call: (data) => {\r\n            const ref = this.unserialize(data)[0];\r\n            responseSubs.add(this.get(ref.id)?.[1].subscription);\r\n            refTask[1](ref);\r\n          },\r\n          err_call: (err) => {\r\n            return refTask[0].then(ref => {\r\n              const obs = this.getValue(ref)[0];\r\n              (obs as typeof obs.origin).subject.error(err);\r\n            })\r\n          },\r\n          comp_call: () => {\r\n            return refTask[0].then(ref => {\r\n              const obs = this.getValue(ref)[0];\r\n              (obs as typeof obs.origin).subject.complete();\r\n            })\r\n          }\r\n        });\r\n        callSubscription.add(() => {\r\n          if (!responseSubs.closed) op.end_call()\r\n        });\r\n        callSubscription.add(responseSubs);\r\n        responseSubs.add(callSubscription);\r\n        op.call(fId, param, refArg);\r\n        return refTask[0];\r\n      }).then(ref => {\r\n        if (!ref) return;\r\n        const subs = this.getValue(ref)[0].subscribe(subscriber);\r\n        callSubscription.add(() => subs.unsubscribe());\r\n      });\r\n      subscriber.add(callSubscription);\r\n    }, this.promiseCtr, this))());\r\n  }\r\n}\r\n","type InferValue<Prop extends PropertyKey, Desc> =\r\n  Desc extends { get(): any, value: any } ? never :\r\n  Desc extends { value: infer T } ? Record<Prop, T> :\r\n  Desc extends { get(): infer T } ? Record<Prop, T> : never;\r\n\r\ntype DefineProperty<\r\n  Prop extends PropertyKey,\r\n  Desc extends PropertyDescriptor> =\r\n  Desc extends { writable: any, set(val: any): any } ? never :\r\n  Desc extends { writable: any, get(): any } ? never :\r\n  Desc extends { writable: false } ? Readonly<InferValue<Prop, Desc>> :\r\n  Desc extends { writable: true } ? InferValue<Prop, Desc> :\r\n  Readonly<InferValue<Prop, Desc>>\r\n\r\nexport function defineProperty<\r\n  Obj extends object,\r\n  Key extends PropertyKey,\r\n  PDesc extends PropertyDescriptor>\r\n  (obj: Obj, prop: Key, val: PDesc): Obj & DefineProperty<Key, PDesc> {\r\n  return Object.defineProperty(obj, prop, val);\r\n}\r\n","import { KeysOfType } from 'dependent-type';\r\n\r\nexport const toCond = <S, X extends S, K, E = never>(x: K) => x as X extends S ? K : E;\r\nexport const asCond = <A, B, R>(x: A & R) => x as A extends B ? A : R as A extends B ? B : R;\r\nexport const byKey = <T, R>(o: T, k: KeysOfType<T, R>): R => o[k] as any;\r\nexport const subKey = <A, B extends A, T, K = unknown>(k: K & KeysOfType<T, B>): K & KeysOfType<T, A> => k as any;\r\n","export { defineProperty } from './global';\r\nexport * as guards from './guards';\r\nexport { QuickPromise } from './quick-promise';\r\nexport * as rx_utils from './rx-utils';\r\n","import { identity } from \"rxjs\";\r\n\r\nenum PromiseStatus { Pending, Resolved, Rejected, Alias }\r\n\r\nexport class QuickPromise<T> implements PromiseLike<T> {\r\n  private _thens: ((x: T) => void)[] = [];\r\n  private _catchs: ((e: any) => void)[] = [];\r\n  private _value?: T;\r\n  private _error?: any;\r\n  private _promise?: PromiseLike<T>;\r\n  private _status = PromiseStatus.Pending;\r\n\r\n  private _finilize<U>(list: ((x: U) => void)[]) {\r\n    return (value: U) => {\r\n      list.forEach(h => h(value));\r\n      this._thens = [];\r\n      this._catchs = [];\r\n    };\r\n  }\r\n\r\n  constructor(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) {\r\n    executor(valueOrPromise => {\r\n      if (this._status !== PromiseStatus.Pending) return;\r\n      if (((v: any): v is PromiseLike<T> => v?.then)(valueOrPromise)) {\r\n        this._status = PromiseStatus.Alias;\r\n        this._promise = valueOrPromise;\r\n        valueOrPromise.then(this._finilize(this._thens), this._finilize(this._catchs));\r\n      } else {\r\n        const value: T = valueOrPromise!;\r\n        this._value = value;\r\n        this._status = PromiseStatus.Resolved;\r\n        this._finilize(this._thens)(value);\r\n      }\r\n    }, e => {\r\n      if (this._status !== PromiseStatus.Pending) return;\r\n      this._error = e;\r\n      this._status = PromiseStatus.Rejected;\r\n      this._finilize(this._catchs)(e);\r\n    });\r\n  }\r\n\r\n  private _tryRun<R>(\r\n    handler: (value: T) => R | PromiseLike<R>,\r\n    resolve: (value: R | PromiseLike<R>) => void,\r\n    reject: (reason?: any) => void,\r\n  ): (x: T) => void {\r\n    return (x: T) => {\r\n      try {\r\n        const valueOrPromise = handler(x);\r\n        if (((v: any): v is PromiseLike<R> => v?.then)(valueOrPromise)) {\r\n          valueOrPromise.then(resolve, reject);\r\n        } else {\r\n          const value: R = valueOrPromise;\r\n          resolve(value);\r\n        }\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    };\r\n  }\r\n  then<R = T, E = never>(\r\n    onfulfilled?: ((value: T) => R | PromiseLike<R>) | null,\r\n    onrejected?: ((reason: any) => E | PromiseLike<E>) | null\r\n  ): PromiseLike<R | E> {\r\n    const onfulfilled2 = onfulfilled ?? identity as unknown as (value: T) => R;\r\n    return new QuickPromise<R | E>((res, rej) => {\r\n      if (this._status === PromiseStatus.Pending) {\r\n        this._thens.push(this._tryRun(onfulfilled2, res, rej));\r\n        if (onrejected) this._catchs.push(this._tryRun(onrejected, res, rej));\r\n        else this._catchs.push(rej);\r\n      } else if (this._status === PromiseStatus.Alias) {\r\n        const promise = this._promise!;\r\n        promise.then(\r\n          this._tryRun(onfulfilled2, res, rej),\r\n          onrejected ? this._tryRun(onrejected, res, rej) : rej,\r\n        );\r\n      } else if (this._status === PromiseStatus.Resolved) {\r\n        this._tryRun(onfulfilled2, res, rej)(this._value!);\r\n      } else {\r\n        if (onrejected) this._tryRun(onrejected, res, rej)(this._error!);\r\n        else rej(this._error!);\r\n      }\r\n    });\r\n  }\r\n  catch<E = never>(\r\n    onrejected?: ((reason: any) => E | PromiseLike<E>) | null\r\n  ): PromiseLike<E> {\r\n    return this.then(null, onrejected);\r\n  }\r\n  [Symbol.toStringTag]: '';\r\n  finally(\r\n    onfinally?: (() => void) | null\r\n  ): PromiseLike<T> {\r\n    if (!onfinally) return this;\r\n    const handler = () => { try { onfinally(); } catch (_e) { } };\r\n    if (this._status === PromiseStatus.Alias) this._promise!.then(handler, handler);\r\n    else if (this._status === PromiseStatus.Pending) this._thens.push(handler), this._catchs.push(handler);\r\n    else handler();\r\n    return this;\r\n  }\r\n  static resolve<T>(v: T | PromiseLike<T>): QuickPromise<T>;\r\n  static resolve<T>(v?: T | PromiseLike<T> | undefined): QuickPromise<T | undefined>;\r\n  static resolve<T>(v: T | PromiseLike<T>) {\r\n    return new QuickPromise<T>(res => res(v));\r\n  }\r\n\r\n  static reject(e: any) {\r\n    return new QuickPromise<never>((_, rej) => rej(e));\r\n  }\r\n\r\n  static all<T>(values: readonly (T | PromiseLike<T>)[]): PromiseLike<T[]>;\r\n  static all<O>(values: O): PromiseLike<UnPromise<O>>;\r\n  static all<O>(p: O): PromiseLike<UnPromise<O>> {\r\n    const result = (p instanceof Array ? [...p] : { ...p }) as UnPromise<O>;\r\n    const keys = (Object.keys(p) as (keyof O)[]).filter(k => (p[k] as any).then);\r\n    let count = keys.length;\r\n    return new QuickPromise<UnPromise<O>>((res, rej) => {\r\n      if (!count) res(result);\r\n      keys.forEach(<k extends keyof O>(k: k) => {\r\n        const promise = (p[k] as any as PromiseLike<O[k] extends PromiseLike<infer T> ? T : never>);\r\n        promise.then<void, void>(x => {\r\n          result[k] = x;\r\n          if (!--count) res(result);\r\n        }, rej);\r\n      });\r\n    });\r\n  }\r\n}\r\ntype UnPromise<O> = {\r\n  [k in keyof O]: O[k] extends PromiseLike<infer T> ? T : O[k]\r\n};","import { combineLatest, of, TeardownLogic, Subscriber, Observable, Subscription, OperatorFunction, concat, NEVER } from 'rxjs';\r\nimport type { CombineLatestSubscriber } from 'rxjs/internal/observable/combineLatest';\r\nimport { CombineLatestOperator } from 'rxjs/internal/observable/combineLatest';\r\n\r\ndeclare module 'rxjs/operators' {\r\n  export function scan<T, R, V>(accumulator: (acc: R | V, value: T, index: number) => R, seed: V): OperatorFunction<T, R>;\r\n}\r\n\r\nclass CompleteDestination<T> extends Subscriber<T> {\r\n  notifyComplete() { this.destination.complete?.(); }\r\n}\r\n\r\nexport const EMPTY_ARR = concat(of([]), NEVER);\r\n/** Like combineLatest but emits if the array of observables is empty \r\n * and completes when and only when one observable completes */\r\nexport const eagerCombineAll: typeof combineLatest = function (this: any, ...args: any[]) {\r\n  if (args.length === 0 || args.length === 1 && args[0] instanceof Array && args[0].length === 0) return EMPTY_ARR;\r\n  const obs = combineLatest.apply(this, args);\r\n  (obs.operator as CombineLatestOperator<any, any>).call = function (sink, source) {\r\n    const subscriber: CombineLatestSubscriber<any, any> = CombineLatestOperator.prototype.call(sink, source);\r\n    subscriber.notifyComplete = CompleteDestination.prototype.notifyComplete;\r\n  }\r\n  return obs;\r\n} as any;\r\n\r\nexport const on = <T>({ complete, error, next, subscribe, teardown }: {\r\n  complete?: () => void, error?: (e: any) => void, next?: (v: T) => void, subscribe?: () => void, teardown?: TeardownLogic\r\n}) => (source: Observable<T>) => source.lift<T>(function (this: Subscriber<T>, source: Observable<T>) {\r\n  const subscriber = this;\r\n  subscribe?.();\r\n  const subscription = new Subscription();\r\n  subscription.add(source.subscribe(v => {\r\n    next?.(v);\r\n    subscriber.next(v)\r\n  }, e => {\r\n    error?.(e);\r\n    subscriber.error(e)\r\n  }, () => {\r\n    complete?.();\r\n    subscriber.complete();\r\n  }));\r\n  subscription.add(teardown);\r\n  return subscription;\r\n});\r\n\r\nexport function current<T>(obs: Observable<T>, value: T): T;\r\nexport function current<T>(obs: Observable<T | undefined>, value?: T | undefined): T | undefined;\r\nexport function current<T>(obs: Observable<T>, value: T) {\r\n  obs.subscribe(v => value = v).unsubscribe();\r\n  return value;\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_internal_InnerSubscriber__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_internal_OuterSubscriber__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_internal_observable_combineLatest__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_internal_util_subscribeToResult__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_operators__;"],"sourceRoot":""}